"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import dydxprotocol.indexer.protocol.v1.clob_pb2
import dydxprotocol.indexer.shared.removal_reason_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class OrderPlaceV1(google.protobuf.message.Message):
    """Do not make any breaking changes to these protos, a new version should be
    created if a breaking change is needed.

    OrderPlace messages contain the order placed/replaced.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _OrderPlacementStatus:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _OrderPlacementStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OrderPlaceV1._OrderPlacementStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ORDER_PLACEMENT_STATUS_UNSPECIFIED: OrderPlaceV1._OrderPlacementStatus.ValueType  # 0
        """Default value, this is invalid and unused."""
        ORDER_PLACEMENT_STATUS_BEST_EFFORT_OPENED: OrderPlaceV1._OrderPlacementStatus.ValueType  # 1
        """A best effort opened order is one that has only been confirmed to be
        placed on the dYdX node sending the off-chain update message.
        The cases where this happens includes:
        - The dYdX node places an order in it's in-memory orderbook during the
          CheckTx flow.
        A best effort placed order may not have been placed on other dYdX
        nodes including other dYdX validator nodes and may still be excluded in
        future order matches.
        """
        ORDER_PLACEMENT_STATUS_OPENED: OrderPlaceV1._OrderPlacementStatus.ValueType  # 2
        """An opened order is one that is confirmed to be placed on all dYdX nodes
        (discounting dishonest dYdX nodes) and will be included in any future
        order matches.
        This status is used internally by the indexer and will not be sent
        out by protocol.
        """

    class OrderPlacementStatus(_OrderPlacementStatus, metaclass=_OrderPlacementStatusEnumTypeWrapper):
        """OrderPlacementStatus is an enum for the resulting status after an order is
        placed.
        """

    ORDER_PLACEMENT_STATUS_UNSPECIFIED: OrderPlaceV1.OrderPlacementStatus.ValueType  # 0
    """Default value, this is invalid and unused."""
    ORDER_PLACEMENT_STATUS_BEST_EFFORT_OPENED: OrderPlaceV1.OrderPlacementStatus.ValueType  # 1
    """A best effort opened order is one that has only been confirmed to be
    placed on the dYdX node sending the off-chain update message.
    The cases where this happens includes:
    - The dYdX node places an order in it's in-memory orderbook during the
      CheckTx flow.
    A best effort placed order may not have been placed on other dYdX
    nodes including other dYdX validator nodes and may still be excluded in
    future order matches.
    """
    ORDER_PLACEMENT_STATUS_OPENED: OrderPlaceV1.OrderPlacementStatus.ValueType  # 2
    """An opened order is one that is confirmed to be placed on all dYdX nodes
    (discounting dishonest dYdX nodes) and will be included in any future
    order matches.
    This status is used internally by the indexer and will not be sent
    out by protocol.
    """

    ORDER_FIELD_NUMBER: builtins.int
    PLACEMENT_STATUS_FIELD_NUMBER: builtins.int
    TIME_STAMP_FIELD_NUMBER: builtins.int
    placement_status: global___OrderPlaceV1.OrderPlacementStatus.ValueType
    @property
    def order(self) -> dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrder: ...
    @property
    def time_stamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp of the order placement."""

    def __init__(
        self,
        *,
        order: dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrder | None = ...,
        placement_status: global___OrderPlaceV1.OrderPlacementStatus.ValueType = ...,
        time_stamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order", b"order", "time_stamp", b"time_stamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order", b"order", "placement_status", b"placement_status", "time_stamp", b"time_stamp"]) -> None: ...

global___OrderPlaceV1 = OrderPlaceV1

@typing.final
class OrderRemoveV1(google.protobuf.message.Message):
    """OrderRemove messages contain the id of the order removed, the reason for the
    removal and the resulting status from the removal.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _OrderRemovalStatus:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _OrderRemovalStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OrderRemoveV1._OrderRemovalStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ORDER_REMOVAL_STATUS_UNSPECIFIED: OrderRemoveV1._OrderRemovalStatus.ValueType  # 0
        """Default value, this is invalid and unused."""
        ORDER_REMOVAL_STATUS_BEST_EFFORT_CANCELED: OrderRemoveV1._OrderRemovalStatus.ValueType  # 1
        """A best effort canceled order is one that has only been confirmed to be
        removed on the dYdX node sending the off-chain update message.
        The cases where this happens includes:
        - the order was removed due to the dYdX node receiving a CancelOrder
          transaction for the order.
        - the order was removed due to being undercollateralized during
          optimistic matching.
        A best effort canceled order may not have been removed on other dYdX
        nodes including other dYdX validator nodes and may still be included in
        future order matches.
        """
        ORDER_REMOVAL_STATUS_CANCELED: OrderRemoveV1._OrderRemovalStatus.ValueType  # 2
        """A canceled order is one that is confirmed to be removed on all dYdX nodes
        (discounting dishonest dYdX nodes) and will not be included in any future
        order matches.
        The cases where this happens includes:
        - the order is expired.
        """
        ORDER_REMOVAL_STATUS_FILLED: OrderRemoveV1._OrderRemovalStatus.ValueType  # 3
        """An order was fully-filled. Only sent by the Indexer for stateful orders."""

    class OrderRemovalStatus(_OrderRemovalStatus, metaclass=_OrderRemovalStatusEnumTypeWrapper):
        """OrderRemovalStatus is an enum for the resulting status after an order is
        removed.
        """

    ORDER_REMOVAL_STATUS_UNSPECIFIED: OrderRemoveV1.OrderRemovalStatus.ValueType  # 0
    """Default value, this is invalid and unused."""
    ORDER_REMOVAL_STATUS_BEST_EFFORT_CANCELED: OrderRemoveV1.OrderRemovalStatus.ValueType  # 1
    """A best effort canceled order is one that has only been confirmed to be
    removed on the dYdX node sending the off-chain update message.
    The cases where this happens includes:
    - the order was removed due to the dYdX node receiving a CancelOrder
      transaction for the order.
    - the order was removed due to being undercollateralized during
      optimistic matching.
    A best effort canceled order may not have been removed on other dYdX
    nodes including other dYdX validator nodes and may still be included in
    future order matches.
    """
    ORDER_REMOVAL_STATUS_CANCELED: OrderRemoveV1.OrderRemovalStatus.ValueType  # 2
    """A canceled order is one that is confirmed to be removed on all dYdX nodes
    (discounting dishonest dYdX nodes) and will not be included in any future
    order matches.
    The cases where this happens includes:
    - the order is expired.
    """
    ORDER_REMOVAL_STATUS_FILLED: OrderRemoveV1.OrderRemovalStatus.ValueType  # 3
    """An order was fully-filled. Only sent by the Indexer for stateful orders."""

    REMOVED_ORDER_ID_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    REMOVAL_STATUS_FIELD_NUMBER: builtins.int
    TIME_STAMP_FIELD_NUMBER: builtins.int
    reason: dydxprotocol.indexer.shared.removal_reason_pb2.OrderRemovalReason.ValueType
    removal_status: global___OrderRemoveV1.OrderRemovalStatus.ValueType
    @property
    def removed_order_id(self) -> dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrderId: ...
    @property
    def time_stamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp of the order removal."""

    def __init__(
        self,
        *,
        removed_order_id: dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrderId | None = ...,
        reason: dydxprotocol.indexer.shared.removal_reason_pb2.OrderRemovalReason.ValueType = ...,
        removal_status: global___OrderRemoveV1.OrderRemovalStatus.ValueType = ...,
        time_stamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["removed_order_id", b"removed_order_id", "time_stamp", b"time_stamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["reason", b"reason", "removal_status", b"removal_status", "removed_order_id", b"removed_order_id", "time_stamp", b"time_stamp"]) -> None: ...

global___OrderRemoveV1 = OrderRemoveV1

@typing.final
class OrderUpdateV1(google.protobuf.message.Message):
    """OrderUpdate messages contain the id of the order being updated, and the
    updated total filled quantums of the order.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_ID_FIELD_NUMBER: builtins.int
    TOTAL_FILLED_QUANTUMS_FIELD_NUMBER: builtins.int
    total_filled_quantums: builtins.int
    @property
    def order_id(self) -> dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrderId: ...
    def __init__(
        self,
        *,
        order_id: dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrderId | None = ...,
        total_filled_quantums: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order_id", b"order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order_id", b"order_id", "total_filled_quantums", b"total_filled_quantums"]) -> None: ...

global___OrderUpdateV1 = OrderUpdateV1

@typing.final
class OrderReplaceV1(google.protobuf.message.Message):
    """OrderReplace messages contain the old order ID and the replacement order."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OLD_ORDER_ID_FIELD_NUMBER: builtins.int
    ORDER_FIELD_NUMBER: builtins.int
    PLACEMENT_STATUS_FIELD_NUMBER: builtins.int
    TIME_STAMP_FIELD_NUMBER: builtins.int
    placement_status: global___OrderPlaceV1.OrderPlacementStatus.ValueType
    @property
    def old_order_id(self) -> dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrderId:
        """vault replaces orders with a different order ID"""

    @property
    def order(self) -> dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrder: ...
    @property
    def time_stamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        old_order_id: dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrderId | None = ...,
        order: dydxprotocol.indexer.protocol.v1.clob_pb2.IndexerOrder | None = ...,
        placement_status: global___OrderPlaceV1.OrderPlacementStatus.ValueType = ...,
        time_stamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["old_order_id", b"old_order_id", "order", b"order", "time_stamp", b"time_stamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["old_order_id", b"old_order_id", "order", b"order", "placement_status", b"placement_status", "time_stamp", b"time_stamp"]) -> None: ...

global___OrderReplaceV1 = OrderReplaceV1

@typing.final
class OffChainUpdateV1(google.protobuf.message.Message):
    """An OffChainUpdate message is the message type which will be sent on Kafka to
    the Indexer.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_PLACE_FIELD_NUMBER: builtins.int
    ORDER_REMOVE_FIELD_NUMBER: builtins.int
    ORDER_UPDATE_FIELD_NUMBER: builtins.int
    ORDER_REPLACE_FIELD_NUMBER: builtins.int
    @property
    def order_place(self) -> global___OrderPlaceV1: ...
    @property
    def order_remove(self) -> global___OrderRemoveV1: ...
    @property
    def order_update(self) -> global___OrderUpdateV1: ...
    @property
    def order_replace(self) -> global___OrderReplaceV1: ...
    def __init__(
        self,
        *,
        order_place: global___OrderPlaceV1 | None = ...,
        order_remove: global___OrderRemoveV1 | None = ...,
        order_update: global___OrderUpdateV1 | None = ...,
        order_replace: global___OrderReplaceV1 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order_place", b"order_place", "order_remove", b"order_remove", "order_replace", b"order_replace", "order_update", b"order_update", "update_message", b"update_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order_place", b"order_place", "order_remove", b"order_remove", "order_replace", b"order_replace", "order_update", b"order_update", "update_message", b"update_message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["update_message", b"update_message"]) -> typing.Literal["order_place", "order_remove", "order_update", "order_replace"] | None: ...

global___OffChainUpdateV1 = OffChainUpdateV1
