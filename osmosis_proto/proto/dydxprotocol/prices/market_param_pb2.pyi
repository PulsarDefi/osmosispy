"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class MarketParam(google.protobuf.message.Message):
    """MarketParam represents the x/prices configuration for markets, including
    representing price values, resolving markets on individual exchanges, and
    generating price updates. This configuration is specific to the quote
    currency.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    PAIR_FIELD_NUMBER: builtins.int
    EXPONENT_FIELD_NUMBER: builtins.int
    MIN_EXCHANGES_FIELD_NUMBER: builtins.int
    MIN_PRICE_CHANGE_PPM_FIELD_NUMBER: builtins.int
    EXCHANGE_CONFIG_JSON_FIELD_NUMBER: builtins.int
    id: builtins.int
    """Unique, sequentially-generated value."""
    pair: builtins.str
    """The human-readable name of the market pair (e.g. `BTC-USD`)."""
    exponent: builtins.int
    """Static value. The exponent of the price.
    For example if `Exponent == -5` then a `Value` of `1,000,000,000`
    represents ``$10,000`. Therefore `10 ^ Exponent` represents the smallest
    price step (in dollars) that can be recorded.

    Deprecated since v8.x. This value is now determined from the marketmap.
    """
    min_exchanges: builtins.int
    """The minimum number of exchanges that should be reporting a live price for
    a price update to be considered valid.

    Deprecated since v8.x. This value is now determined from the marketmap.
    """
    min_price_change_ppm: builtins.int
    """The minimum allowable change in `price` value that would cause a price
    update on the network. Measured as `1e-6` (parts per million).
    """
    exchange_config_json: builtins.str
    """A string of json that encodes the configuration for resolving the price
    of this market on various exchanges.

    Deprecated since v8.x. This is now determined from the marketmap.
    """
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        pair: builtins.str = ...,
        exponent: builtins.int = ...,
        min_exchanges: builtins.int = ...,
        min_price_change_ppm: builtins.int = ...,
        exchange_config_json: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["exchange_config_json", b"exchange_config_json", "exponent", b"exponent", "id", b"id", "min_exchanges", b"min_exchanges", "min_price_change_ppm", b"min_price_change_ppm", "pair", b"pair"]) -> None: ...

global___MarketParam = MarketParam
