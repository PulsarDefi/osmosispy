"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class LimitParams(google.protobuf.message.Message):
    """LimitParams defines rate limit params on a denom."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DENOM_FIELD_NUMBER: builtins.int
    LIMITERS_FIELD_NUMBER: builtins.int
    denom: builtins.str
    """denom is the denomination of the token being rate limited.
    e.g. ibc/8E27BA2D5493AF5636760E354E46004562C46AB7EC0CC4C1CA14E9E20E2545B5
    """
    @property
    def limiters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Limiter]:
        """limiters is a list of rate-limiters on this denom. All limiters
        must be satified for a withdrawal to proceed.
        """

    def __init__(
        self,
        *,
        denom: builtins.str = ...,
        limiters: collections.abc.Iterable[global___Limiter] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["denom", b"denom", "limiters", b"limiters"]) -> None: ...

global___LimitParams = LimitParams

@typing.final
class Limiter(google.protobuf.message.Message):
    """Limiter defines one rate-limiter on a specfic denom."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PERIOD_FIELD_NUMBER: builtins.int
    BASELINE_MINIMUM_FIELD_NUMBER: builtins.int
    BASELINE_TVL_PPM_FIELD_NUMBER: builtins.int
    baseline_minimum: builtins.bytes
    """baseline_minimum is the minimum maximum withdrawal coin amount within the
    time period.
    e.g. 100_000_000_000 uusdc for 100k USDC; 5e22 adv4tnt for 50k DV4TNT
    """
    baseline_tvl_ppm: builtins.int
    """baseline_tvl_ppm is the maximum ratio of TVL withdrawable in
    the time period, in part-per-million.
    e.g. 100_000 (10%)
    """
    @property
    def period(self) -> google.protobuf.duration_pb2.Duration:
        """period is the rolling time period for which the limit applies
        e.g. 3600 (an hour)
        """

    def __init__(
        self,
        *,
        period: google.protobuf.duration_pb2.Duration | None = ...,
        baseline_minimum: builtins.bytes = ...,
        baseline_tvl_ppm: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["period", b"period"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["baseline_minimum", b"baseline_minimum", "baseline_tvl_ppm", b"baseline_tvl_ppm", "period", b"period"]) -> None: ...

global___Limiter = Limiter
