"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import dydxprotocol.clob.liquidations_pb2
import dydxprotocol.subaccounts.subaccount_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class OrderId(google.protobuf.message.Message):
    """OrderId refers to a single order belonging to a Subaccount."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBACCOUNT_ID_FIELD_NUMBER: builtins.int
    CLIENT_ID_FIELD_NUMBER: builtins.int
    ORDER_FLAGS_FIELD_NUMBER: builtins.int
    CLOB_PAIR_ID_FIELD_NUMBER: builtins.int
    client_id: builtins.int
    """The client ID of this order, unique with respect to the specific
    sub account (I.E., the same subaccount can't have two orders with
    the same ClientId).
    """
    order_flags: builtins.int
    """order_flags represent order flags for the order. This field is invalid if
    it's greater than 127 (larger than one byte). Each bit in the first byte
    represents a different flag. Currently only two flags are supported.

    Starting from the bit after the most MSB (note that the MSB is used in
    proto varint encoding, and therefore cannot be used): Bit 1 is set if this
    order is a Long-Term order (0x40, or 64 as a uint8). Bit 2 is set if this
    order is a Conditional order (0x20, or 32 as a uint8).

    If neither bit is set, the order is assumed to be a Short-Term order.

    If both bits are set or bits other than the 2nd and 3rd are set, the order
    ID is invalid.
    """
    clob_pair_id: builtins.int
    """ID of the CLOB the order is created for."""
    @property
    def subaccount_id(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """The subaccount ID that opened this order.
        Note that this field has `gogoproto.nullable = false` so that it is
        generated as a value instead of a pointer. This is because the `OrderId`
        proto is used as a key within maps, and map comparisons will compare
        pointers for equality (when the desired behavior is to compare the values).
        """

    def __init__(
        self,
        *,
        subaccount_id: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        client_id: builtins.int = ...,
        order_flags: builtins.int = ...,
        clob_pair_id: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["subaccount_id", b"subaccount_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["client_id", b"client_id", "clob_pair_id", b"clob_pair_id", "order_flags", b"order_flags", "subaccount_id", b"subaccount_id"]) -> None: ...

global___OrderId = OrderId

@typing.final
class OrdersFilledDuringLatestBlock(google.protobuf.message.Message):
    """OrdersFilledDuringLatestBlock represents a list of `OrderIds` that were
    filled by any non-zero amount in the latest block.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_IDS_FIELD_NUMBER: builtins.int
    @property
    def order_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrderId]:
        """A list of unique order_ids that were filled by any non-zero amount in the
        latest block.
        """

    def __init__(
        self,
        *,
        order_ids: collections.abc.Iterable[global___OrderId] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["order_ids", b"order_ids"]) -> None: ...

global___OrdersFilledDuringLatestBlock = OrdersFilledDuringLatestBlock

@typing.final
class PotentiallyPrunableOrders(google.protobuf.message.Message):
    """PotentiallyPrunableOrders represents a list of orders that may be prunable
    from state at a future block height.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_IDS_FIELD_NUMBER: builtins.int
    @property
    def order_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrderId]:
        """A list of unique order_ids that may potentially be pruned from state at a
        future block height.
        """

    def __init__(
        self,
        *,
        order_ids: collections.abc.Iterable[global___OrderId] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["order_ids", b"order_ids"]) -> None: ...

global___PotentiallyPrunableOrders = PotentiallyPrunableOrders

@typing.final
class OrderFillState(google.protobuf.message.Message):
    """OrderFillState represents the fill amount of an order according to on-chain
    state. This proto includes both the current on-chain fill amount of the
    order, as well as the block at which this information can be pruned from
    state.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILL_AMOUNT_FIELD_NUMBER: builtins.int
    PRUNABLE_BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    fill_amount: builtins.int
    """The current fillAmount of the order according to on-chain state."""
    prunable_block_height: builtins.int
    """The block height at which the fillAmount state for this order can be
    pruned.
    """
    def __init__(
        self,
        *,
        fill_amount: builtins.int = ...,
        prunable_block_height: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["fill_amount", b"fill_amount", "prunable_block_height", b"prunable_block_height"]) -> None: ...

global___OrderFillState = OrderFillState

@typing.final
class StatefulOrderTimeSliceValue(google.protobuf.message.Message):
    """StatefulOrderTimeSliceValue represents the type of the value of the
    `StatefulOrdersTimeSlice` in state. The `StatefulOrdersTimeSlice`
    in state consists of key/value pairs where the keys are UTF-8-encoded
    `RFC3339NANO` timestamp strings with right-padded zeroes and no
    time zone info, and the values are of type `StatefulOrderTimeSliceValue`.
    This `StatefulOrderTimeSliceValue` in state is used for managing stateful
    order expiration. Stateful order expirations can be for either long term
    or conditional orders.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_IDS_FIELD_NUMBER: builtins.int
    @property
    def order_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrderId]:
        """A unique list of order_ids that expire at this timestamp, sorted in
        ascending order by block height and transaction index of each stateful
        order.
        """

    def __init__(
        self,
        *,
        order_ids: collections.abc.Iterable[global___OrderId] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["order_ids", b"order_ids"]) -> None: ...

global___StatefulOrderTimeSliceValue = StatefulOrderTimeSliceValue

@typing.final
class LongTermOrderPlacement(google.protobuf.message.Message):
    """LongTermOrderPlacement represents the placement of a stateful order in
    state. It stores the stateful order itself and the `BlockHeight` and
    `TransactionIndex` at which the order was placed.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_FIELD_NUMBER: builtins.int
    PLACEMENT_INDEX_FIELD_NUMBER: builtins.int
    @property
    def order(self) -> global___Order: ...
    @property
    def placement_index(self) -> global___TransactionOrdering:
        """The block height and transaction index at which the order was placed.
        Used for ordering by time priority when the chain is restarted.
        """

    def __init__(
        self,
        *,
        order: global___Order | None = ...,
        placement_index: global___TransactionOrdering | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order", b"order", "placement_index", b"placement_index"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order", b"order", "placement_index", b"placement_index"]) -> None: ...

global___LongTermOrderPlacement = LongTermOrderPlacement

@typing.final
class ConditionalOrderPlacement(google.protobuf.message.Message):
    """ConditionalOrderPlacement represents the placement of a conditional order in
    state. It stores the stateful order itself, the `BlockHeight` and
    `TransactionIndex` at which the order was placed and triggered.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_FIELD_NUMBER: builtins.int
    PLACEMENT_INDEX_FIELD_NUMBER: builtins.int
    TRIGGER_INDEX_FIELD_NUMBER: builtins.int
    @property
    def order(self) -> global___Order: ...
    @property
    def placement_index(self) -> global___TransactionOrdering:
        """The block height and transaction index at which the order was placed."""

    @property
    def trigger_index(self) -> global___TransactionOrdering:
        """The block height and transaction index at which the order was triggered.
        Set to be nil if the transaction has not been triggered.
        Used for ordering by time priority when the chain is restarted.
        """

    def __init__(
        self,
        *,
        order: global___Order | None = ...,
        placement_index: global___TransactionOrdering | None = ...,
        trigger_index: global___TransactionOrdering | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order", b"order", "placement_index", b"placement_index", "trigger_index", b"trigger_index"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order", b"order", "placement_index", b"placement_index", "trigger_index", b"trigger_index"]) -> None: ...

global___ConditionalOrderPlacement = ConditionalOrderPlacement

@typing.final
class Order(google.protobuf.message.Message):
    """Order represents a single order belonging to a `Subaccount`
    for a particular `ClobPair`.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Side:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _SideEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Order._Side.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SIDE_UNSPECIFIED: Order._Side.ValueType  # 0
        """Default value. This value is invalid and unused."""
        SIDE_BUY: Order._Side.ValueType  # 1
        """SIDE_BUY is used to represent a BUY order."""
        SIDE_SELL: Order._Side.ValueType  # 2
        """SIDE_SELL is used to represent a SELL order."""

    class Side(_Side, metaclass=_SideEnumTypeWrapper):
        """Represents the side of the orderbook the order will be placed on.
        Note that Side.SIDE_UNSPECIFIED is an invalid order and cannot be
        placed on the orderbook.
        """

    SIDE_UNSPECIFIED: Order.Side.ValueType  # 0
    """Default value. This value is invalid and unused."""
    SIDE_BUY: Order.Side.ValueType  # 1
    """SIDE_BUY is used to represent a BUY order."""
    SIDE_SELL: Order.Side.ValueType  # 2
    """SIDE_SELL is used to represent a SELL order."""

    class _TimeInForce:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TimeInForceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Order._TimeInForce.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TIME_IN_FORCE_UNSPECIFIED: Order._TimeInForce.ValueType  # 0
        """TIME_IN_FORCE_UNSPECIFIED represents the default behavior where an
        order will first match with existing orders on the book, and any
        remaining size will be added to the book as a maker order.
        """
        TIME_IN_FORCE_IOC: Order._TimeInForce.ValueType  # 1
        """TIME_IN_FORCE_IOC enforces that an order only be matched with
        maker orders on the book. If the order has remaining size after
        matching with existing orders on the book, the remaining size
        is not placed on the book.
        """
        TIME_IN_FORCE_POST_ONLY: Order._TimeInForce.ValueType  # 2
        """TIME_IN_FORCE_POST_ONLY enforces that an order only be placed
        on the book as a maker order. Note this means that validators will cancel
        any newly-placed post only orders that would cross with other maker
        orders.
        """
        TIME_IN_FORCE_FILL_OR_KILL: Order._TimeInForce.ValueType  # 3
        """TIME_IN_FORCE_FILL_OR_KILL has been deprecated and will be removed in
        future versions.
        """

    class TimeInForce(_TimeInForce, metaclass=_TimeInForceEnumTypeWrapper):
        """TimeInForce indicates how long an order will remain active before it
        is executed or expires.
        """

    TIME_IN_FORCE_UNSPECIFIED: Order.TimeInForce.ValueType  # 0
    """TIME_IN_FORCE_UNSPECIFIED represents the default behavior where an
    order will first match with existing orders on the book, and any
    remaining size will be added to the book as a maker order.
    """
    TIME_IN_FORCE_IOC: Order.TimeInForce.ValueType  # 1
    """TIME_IN_FORCE_IOC enforces that an order only be matched with
    maker orders on the book. If the order has remaining size after
    matching with existing orders on the book, the remaining size
    is not placed on the book.
    """
    TIME_IN_FORCE_POST_ONLY: Order.TimeInForce.ValueType  # 2
    """TIME_IN_FORCE_POST_ONLY enforces that an order only be placed
    on the book as a maker order. Note this means that validators will cancel
    any newly-placed post only orders that would cross with other maker
    orders.
    """
    TIME_IN_FORCE_FILL_OR_KILL: Order.TimeInForce.ValueType  # 3
    """TIME_IN_FORCE_FILL_OR_KILL has been deprecated and will be removed in
    future versions.
    """

    class _ConditionType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ConditionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Order._ConditionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CONDITION_TYPE_UNSPECIFIED: Order._ConditionType.ValueType  # 0
        """CONDITION_TYPE_UNSPECIFIED represents the default behavior where an
        order will be placed immediately on the orderbook.
        """
        CONDITION_TYPE_STOP_LOSS: Order._ConditionType.ValueType  # 1
        """CONDITION_TYPE_STOP_LOSS represents a stop order. A stop order will
        trigger when the oracle price moves at or above the trigger price for
        buys, and at or below the trigger price for sells.
        """
        CONDITION_TYPE_TAKE_PROFIT: Order._ConditionType.ValueType  # 2
        """CONDITION_TYPE_TAKE_PROFIT represents a take profit order. A take profit
        order will trigger when the oracle price moves at or below the trigger
        price for buys and at or above the trigger price for sells.
        """

    class ConditionType(_ConditionType, metaclass=_ConditionTypeEnumTypeWrapper): ...
    CONDITION_TYPE_UNSPECIFIED: Order.ConditionType.ValueType  # 0
    """CONDITION_TYPE_UNSPECIFIED represents the default behavior where an
    order will be placed immediately on the orderbook.
    """
    CONDITION_TYPE_STOP_LOSS: Order.ConditionType.ValueType  # 1
    """CONDITION_TYPE_STOP_LOSS represents a stop order. A stop order will
    trigger when the oracle price moves at or above the trigger price for
    buys, and at or below the trigger price for sells.
    """
    CONDITION_TYPE_TAKE_PROFIT: Order.ConditionType.ValueType  # 2
    """CONDITION_TYPE_TAKE_PROFIT represents a take profit order. A take profit
    order will trigger when the oracle price moves at or below the trigger
    price for buys and at or above the trigger price for sells.
    """

    ORDER_ID_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    QUANTUMS_FIELD_NUMBER: builtins.int
    SUBTICKS_FIELD_NUMBER: builtins.int
    GOOD_TIL_BLOCK_FIELD_NUMBER: builtins.int
    GOOD_TIL_BLOCK_TIME_FIELD_NUMBER: builtins.int
    TIME_IN_FORCE_FIELD_NUMBER: builtins.int
    REDUCE_ONLY_FIELD_NUMBER: builtins.int
    CLIENT_METADATA_FIELD_NUMBER: builtins.int
    CONDITION_TYPE_FIELD_NUMBER: builtins.int
    CONDITIONAL_ORDER_TRIGGER_SUBTICKS_FIELD_NUMBER: builtins.int
    side: global___Order.Side.ValueType
    quantums: builtins.int
    """The size of this order in base quantums. Must be a multiple of
    `ClobPair.StepBaseQuantums` (where `ClobPair.Id = orderId.ClobPairId`).
    """
    subticks: builtins.int
    """The price level that this order will be placed at on the orderbook,
    in subticks. Must be a multiple of ClobPair.SubticksPerTick
    (where `ClobPair.Id = orderId.ClobPairId`).
    """
    good_til_block: builtins.int
    """The last block this order can be executed at (after which it will be
    unfillable). Used only for Short-Term orders. If this value is non-zero
    then the order is assumed to be a Short-Term order.
    """
    good_til_block_time: builtins.int
    """good_til_block_time represents the unix timestamp (in seconds) at which a
    stateful order will be considered expired. The
    good_til_block_time is always evaluated against the previous block's
    `BlockTime` instead of the block in which the order is committed. If this
    value is non-zero then the order is assumed to be a stateful or
    conditional order.
    """
    time_in_force: global___Order.TimeInForce.ValueType
    """The time in force of this order."""
    reduce_only: builtins.bool
    """Enforces that the order can only reduce the size of an existing position.
    If a ReduceOnly order would change the side of the existing position,
    its size is reduced to that of the remaining size of the position.
    If existing orders on the book with ReduceOnly
    would already close the position, the least aggressive (out-of-the-money)
    ReduceOnly orders are resized and canceled first.
    """
    client_metadata: builtins.int
    """Set of bit flags set arbitrarily by clients and ignored by the protocol.
    Used by indexer to infer information about a placed order.
    """
    condition_type: global___Order.ConditionType.ValueType
    conditional_order_trigger_subticks: builtins.int
    """conditional_order_trigger_subticks represents the price at which this order
    will be triggered. If the condition_type is CONDITION_TYPE_UNSPECIFIED,
    this value is enforced to be 0. If this value is nonzero, condition_type
    cannot be CONDITION_TYPE_UNSPECIFIED. Value is in subticks.
    Must be a multiple of ClobPair.SubticksPerTick (where `ClobPair.Id =
    orderId.ClobPairId`).
    """
    @property
    def order_id(self) -> global___OrderId:
        """The unique ID of this order. Meant to be unique across all orders."""

    def __init__(
        self,
        *,
        order_id: global___OrderId | None = ...,
        side: global___Order.Side.ValueType = ...,
        quantums: builtins.int = ...,
        subticks: builtins.int = ...,
        good_til_block: builtins.int = ...,
        good_til_block_time: builtins.int = ...,
        time_in_force: global___Order.TimeInForce.ValueType = ...,
        reduce_only: builtins.bool = ...,
        client_metadata: builtins.int = ...,
        condition_type: global___Order.ConditionType.ValueType = ...,
        conditional_order_trigger_subticks: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["good_til_block", b"good_til_block", "good_til_block_time", b"good_til_block_time", "good_til_oneof", b"good_til_oneof", "order_id", b"order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["client_metadata", b"client_metadata", "condition_type", b"condition_type", "conditional_order_trigger_subticks", b"conditional_order_trigger_subticks", "good_til_block", b"good_til_block", "good_til_block_time", b"good_til_block_time", "good_til_oneof", b"good_til_oneof", "order_id", b"order_id", "quantums", b"quantums", "reduce_only", b"reduce_only", "side", b"side", "subticks", b"subticks", "time_in_force", b"time_in_force"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["good_til_oneof", b"good_til_oneof"]) -> typing.Literal["good_til_block", "good_til_block_time"] | None: ...

global___Order = Order

@typing.final
class TransactionOrdering(google.protobuf.message.Message):
    """TransactionOrdering represents a unique location in the block where a
    transaction was placed. This proto includes both block height and the
    transaction index that the specific transaction was placed. This information
    is used for ordering by time priority when the chain is restarted.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    TRANSACTION_INDEX_FIELD_NUMBER: builtins.int
    block_height: builtins.int
    """Block height in which the transaction was placed."""
    transaction_index: builtins.int
    """Within the block, the unique transaction index."""
    def __init__(
        self,
        *,
        block_height: builtins.int = ...,
        transaction_index: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["block_height", b"block_height", "transaction_index", b"transaction_index"]) -> None: ...

global___TransactionOrdering = TransactionOrdering

@typing.final
class StreamLiquidationOrder(google.protobuf.message.Message):
    """StreamLiquidationOrder represents an protocol-generated IOC liquidation
    order. Used in full node streaming.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIQUIDATION_INFO_FIELD_NUMBER: builtins.int
    CLOB_PAIR_ID_FIELD_NUMBER: builtins.int
    IS_BUY_FIELD_NUMBER: builtins.int
    QUANTUMS_FIELD_NUMBER: builtins.int
    SUBTICKS_FIELD_NUMBER: builtins.int
    clob_pair_id: builtins.int
    """CLOB pair ID of the CLOB pair the liquidation order will be matched
    against.
    """
    is_buy: builtins.bool
    """True if this is a buy order liquidating a short position, false if vice
    versa.
    """
    quantums: builtins.int
    """The number of base quantums for this liquidation order."""
    subticks: builtins.int
    """The subticks this liquidation order will be submitted at."""
    @property
    def liquidation_info(self) -> dydxprotocol.clob.liquidations_pb2.PerpetualLiquidationInfo:
        """Information about this liquidation order."""

    def __init__(
        self,
        *,
        liquidation_info: dydxprotocol.clob.liquidations_pb2.PerpetualLiquidationInfo | None = ...,
        clob_pair_id: builtins.int = ...,
        is_buy: builtins.bool = ...,
        quantums: builtins.int = ...,
        subticks: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["liquidation_info", b"liquidation_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clob_pair_id", b"clob_pair_id", "is_buy", b"is_buy", "liquidation_info", b"liquidation_info", "quantums", b"quantums", "subticks", b"subticks"]) -> None: ...

global___StreamLiquidationOrder = StreamLiquidationOrder
