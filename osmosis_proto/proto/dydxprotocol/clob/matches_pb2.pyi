"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import dydxprotocol.clob.order_pb2
import dydxprotocol.subaccounts.subaccount_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ClobMatch(google.protobuf.message.Message):
    """ClobMatch represents an operations queue entry around all different types
    of matches, specifically regular matches, liquidation matches, and
    deleveraging matches.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MATCH_ORDERS_FIELD_NUMBER: builtins.int
    MATCH_PERPETUAL_LIQUIDATION_FIELD_NUMBER: builtins.int
    MATCH_PERPETUAL_DELEVERAGING_FIELD_NUMBER: builtins.int
    @property
    def match_orders(self) -> global___MatchOrders: ...
    @property
    def match_perpetual_liquidation(self) -> global___MatchPerpetualLiquidation: ...
    @property
    def match_perpetual_deleveraging(self) -> global___MatchPerpetualDeleveraging: ...
    def __init__(
        self,
        *,
        match_orders: global___MatchOrders | None = ...,
        match_perpetual_liquidation: global___MatchPerpetualLiquidation | None = ...,
        match_perpetual_deleveraging: global___MatchPerpetualDeleveraging | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["match", b"match", "match_orders", b"match_orders", "match_perpetual_deleveraging", b"match_perpetual_deleveraging", "match_perpetual_liquidation", b"match_perpetual_liquidation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["match", b"match", "match_orders", b"match_orders", "match_perpetual_deleveraging", b"match_perpetual_deleveraging", "match_perpetual_liquidation", b"match_perpetual_liquidation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["match", b"match"]) -> typing.Literal["match_orders", "match_perpetual_liquidation", "match_perpetual_deleveraging"] | None: ...

global___ClobMatch = ClobMatch

@typing.final
class MakerFill(google.protobuf.message.Message):
    """MakerFill represents the filled amount of a matched maker order."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILL_AMOUNT_FIELD_NUMBER: builtins.int
    MAKER_ORDER_ID_FIELD_NUMBER: builtins.int
    fill_amount: builtins.int
    """The filled amount of the matched maker order, in base quantums.
    TODO(CLOB-571): update to use SerializableInt.
    """
    @property
    def maker_order_id(self) -> dydxprotocol.clob.order_pb2.OrderId:
        """The `OrderId` of the matched maker order."""

    def __init__(
        self,
        *,
        fill_amount: builtins.int = ...,
        maker_order_id: dydxprotocol.clob.order_pb2.OrderId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["maker_order_id", b"maker_order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fill_amount", b"fill_amount", "maker_order_id", b"maker_order_id"]) -> None: ...

global___MakerFill = MakerFill

@typing.final
class MatchOrders(google.protobuf.message.Message):
    """MatchOrders is an injected message used for matching orders."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAKER_ORDER_ID_FIELD_NUMBER: builtins.int
    FILLS_FIELD_NUMBER: builtins.int
    @property
    def taker_order_id(self) -> dydxprotocol.clob.order_pb2.OrderId:
        """The `OrderId` of the taker order."""

    @property
    def fills(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MakerFill]:
        """An ordered list of fills created by this taker order."""

    def __init__(
        self,
        *,
        taker_order_id: dydxprotocol.clob.order_pb2.OrderId | None = ...,
        fills: collections.abc.Iterable[global___MakerFill] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["taker_order_id", b"taker_order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fills", b"fills", "taker_order_id", b"taker_order_id"]) -> None: ...

global___MatchOrders = MatchOrders

@typing.final
class MatchPerpetualLiquidation(google.protobuf.message.Message):
    """MatchPerpetualLiquidation is an injected message used for liquidating a
    subaccount.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIQUIDATED_FIELD_NUMBER: builtins.int
    CLOB_PAIR_ID_FIELD_NUMBER: builtins.int
    PERPETUAL_ID_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    IS_BUY_FIELD_NUMBER: builtins.int
    FILLS_FIELD_NUMBER: builtins.int
    clob_pair_id: builtins.int
    """The ID of the clob pair involved in the liquidation."""
    perpetual_id: builtins.int
    """The ID of the perpetual involved in the liquidation."""
    total_size: builtins.int
    """The total size of the liquidation order including any unfilled size."""
    is_buy: builtins.bool
    """`true` if liquidating a short position, `false` otherwise."""
    @property
    def liquidated(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """ID of the subaccount that was liquidated."""

    @property
    def fills(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MakerFill]:
        """An ordered list of fills created by this liquidation."""

    def __init__(
        self,
        *,
        liquidated: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        clob_pair_id: builtins.int = ...,
        perpetual_id: builtins.int = ...,
        total_size: builtins.int = ...,
        is_buy: builtins.bool = ...,
        fills: collections.abc.Iterable[global___MakerFill] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["liquidated", b"liquidated"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clob_pair_id", b"clob_pair_id", "fills", b"fills", "is_buy", b"is_buy", "liquidated", b"liquidated", "perpetual_id", b"perpetual_id", "total_size", b"total_size"]) -> None: ...

global___MatchPerpetualLiquidation = MatchPerpetualLiquidation

@typing.final
class MatchPerpetualDeleveraging(google.protobuf.message.Message):
    """MatchPerpetualDeleveraging is an injected message used for deleveraging a
    subaccount.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Fill(google.protobuf.message.Message):
        """Fill represents a fill between the liquidated and offsetting subaccount."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        OFFSETTING_SUBACCOUNT_ID_FIELD_NUMBER: builtins.int
        FILL_AMOUNT_FIELD_NUMBER: builtins.int
        fill_amount: builtins.int
        """The amount filled between the liquidated and offsetting position, in
        base quantums.
        TODO(CLOB-571): update to use SerializableInt.
        """
        @property
        def offsetting_subaccount_id(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
            """ID of the subaccount that was used to offset the liquidated subaccount's
            position.
            """

        def __init__(
            self,
            *,
            offsetting_subaccount_id: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
            fill_amount: builtins.int = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["offsetting_subaccount_id", b"offsetting_subaccount_id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["fill_amount", b"fill_amount", "offsetting_subaccount_id", b"offsetting_subaccount_id"]) -> None: ...

    LIQUIDATED_FIELD_NUMBER: builtins.int
    PERPETUAL_ID_FIELD_NUMBER: builtins.int
    FILLS_FIELD_NUMBER: builtins.int
    IS_FINAL_SETTLEMENT_FIELD_NUMBER: builtins.int
    perpetual_id: builtins.int
    """The ID of the perpetual that was liquidated."""
    is_final_settlement: builtins.bool
    """Flag denoting whether the deleveraging operation was for the purpose
    of final settlement. Final settlement matches are at the oracle price,
    whereas deleveraging happens at the bankruptcy price of the deleveraged
    subaccount.
    """
    @property
    def liquidated(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """ID of the subaccount that was liquidated."""

    @property
    def fills(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatchPerpetualDeleveraging.Fill]:
        """An ordered list of fills created by this liquidation."""

    def __init__(
        self,
        *,
        liquidated: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        perpetual_id: builtins.int = ...,
        fills: collections.abc.Iterable[global___MatchPerpetualDeleveraging.Fill] | None = ...,
        is_final_settlement: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["liquidated", b"liquidated"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fills", b"fills", "is_final_settlement", b"is_final_settlement", "liquidated", b"liquidated", "perpetual_id", b"perpetual_id"]) -> None: ...

global___MatchPerpetualDeleveraging = MatchPerpetualDeleveraging
