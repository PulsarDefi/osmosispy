"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import cosmos.base.query.v1beta1.pagination_pb2
import dydxprotocol.clob.block_rate_limit_config_pb2
import dydxprotocol.clob.clob_pair_pb2
import dydxprotocol.clob.equity_tier_limit_config_pb2
import dydxprotocol.clob.liquidations_config_pb2
import dydxprotocol.clob.matches_pb2
import dydxprotocol.clob.mev_pb2
import dydxprotocol.clob.order_pb2
import dydxprotocol.indexer.off_chain_updates.off_chain_updates_pb2
import dydxprotocol.prices.streaming_pb2
import dydxprotocol.subaccounts.streaming_pb2
import dydxprotocol.subaccounts.subaccount_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class QueryGetClobPairRequest(google.protobuf.message.Message):
    """QueryGetClobPairRequest is request type for the ClobPair method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___QueryGetClobPairRequest = QueryGetClobPairRequest

@typing.final
class QueryClobPairResponse(google.protobuf.message.Message):
    """QueryClobPairResponse is response type for the ClobPair method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLOB_PAIR_FIELD_NUMBER: builtins.int
    @property
    def clob_pair(self) -> dydxprotocol.clob.clob_pair_pb2.ClobPair: ...
    def __init__(
        self,
        *,
        clob_pair: dydxprotocol.clob.clob_pair_pb2.ClobPair | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["clob_pair", b"clob_pair"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clob_pair", b"clob_pair"]) -> None: ...

global___QueryClobPairResponse = QueryClobPairResponse

@typing.final
class QueryAllClobPairRequest(google.protobuf.message.Message):
    """QueryAllClobPairRequest is request type for the ClobPairAll method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def pagination(self) -> cosmos.base.query.v1beta1.pagination_pb2.PageRequest: ...
    def __init__(
        self,
        *,
        pagination: cosmos.base.query.v1beta1.pagination_pb2.PageRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pagination", b"pagination"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["pagination", b"pagination"]) -> None: ...

global___QueryAllClobPairRequest = QueryAllClobPairRequest

@typing.final
class QueryClobPairAllResponse(google.protobuf.message.Message):
    """QueryClobPairAllResponse is response type for the ClobPairAll method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLOB_PAIR_FIELD_NUMBER: builtins.int
    PAGINATION_FIELD_NUMBER: builtins.int
    @property
    def clob_pair(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dydxprotocol.clob.clob_pair_pb2.ClobPair]: ...
    @property
    def pagination(self) -> cosmos.base.query.v1beta1.pagination_pb2.PageResponse: ...
    def __init__(
        self,
        *,
        clob_pair: collections.abc.Iterable[dydxprotocol.clob.clob_pair_pb2.ClobPair] | None = ...,
        pagination: cosmos.base.query.v1beta1.pagination_pb2.PageResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pagination", b"pagination"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clob_pair", b"clob_pair", "pagination", b"pagination"]) -> None: ...

global___QueryClobPairAllResponse = QueryClobPairAllResponse

@typing.final
class MevNodeToNodeCalculationRequest(google.protobuf.message.Message):
    """MevNodeToNodeCalculationRequest is a request message used to run the
    MEV node <> node calculation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLOCK_PROPOSER_MATCHES_FIELD_NUMBER: builtins.int
    VALIDATOR_MEV_METRICS_FIELD_NUMBER: builtins.int
    @property
    def block_proposer_matches(self) -> dydxprotocol.clob.mev_pb2.ValidatorMevMatches:
        """Represents the matches on the "block proposer". Note that this field
        does not need to be the actual block proposer's matches for a block, since
        the MEV calculation logic is run with this nodes matches as the "block
        proposer" matches.
        """

    @property
    def validator_mev_metrics(self) -> dydxprotocol.clob.mev_pb2.MevNodeToNodeMetrics:
        """Represents the matches and mid-prices on the validator."""

    def __init__(
        self,
        *,
        block_proposer_matches: dydxprotocol.clob.mev_pb2.ValidatorMevMatches | None = ...,
        validator_mev_metrics: dydxprotocol.clob.mev_pb2.MevNodeToNodeMetrics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["block_proposer_matches", b"block_proposer_matches", "validator_mev_metrics", b"validator_mev_metrics"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["block_proposer_matches", b"block_proposer_matches", "validator_mev_metrics", b"validator_mev_metrics"]) -> None: ...

global___MevNodeToNodeCalculationRequest = MevNodeToNodeCalculationRequest

@typing.final
class MevNodeToNodeCalculationResponse(google.protobuf.message.Message):
    """MevNodeToNodeCalculationResponse is a response message that contains the
    MEV node <> node calculation result.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MevAndVolumePerClob(google.protobuf.message.Message):
        """MevAndVolumePerClob contains information about the MEV and volume per CLOB."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CLOB_PAIR_ID_FIELD_NUMBER: builtins.int
        MEV_FIELD_NUMBER: builtins.int
        VOLUME_FIELD_NUMBER: builtins.int
        clob_pair_id: builtins.int
        mev: builtins.float
        volume: builtins.int
        def __init__(
            self,
            *,
            clob_pair_id: builtins.int = ...,
            mev: builtins.float = ...,
            volume: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["clob_pair_id", b"clob_pair_id", "mev", b"mev", "volume", b"volume"]) -> None: ...

    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MevNodeToNodeCalculationResponse.MevAndVolumePerClob]: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___MevNodeToNodeCalculationResponse.MevAndVolumePerClob] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["results", b"results"]) -> None: ...

global___MevNodeToNodeCalculationResponse = MevNodeToNodeCalculationResponse

@typing.final
class QueryEquityTierLimitConfigurationRequest(google.protobuf.message.Message):
    """QueryEquityTierLimitConfigurationRequest is a request message for
    EquityTierLimitConfiguration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___QueryEquityTierLimitConfigurationRequest = QueryEquityTierLimitConfigurationRequest

@typing.final
class QueryEquityTierLimitConfigurationResponse(google.protobuf.message.Message):
    """QueryEquityTierLimitConfigurationResponse is a response message that contains
    the EquityTierLimitConfiguration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EQUITY_TIER_LIMIT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def equity_tier_limit_config(self) -> dydxprotocol.clob.equity_tier_limit_config_pb2.EquityTierLimitConfiguration: ...
    def __init__(
        self,
        *,
        equity_tier_limit_config: dydxprotocol.clob.equity_tier_limit_config_pb2.EquityTierLimitConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["equity_tier_limit_config", b"equity_tier_limit_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["equity_tier_limit_config", b"equity_tier_limit_config"]) -> None: ...

global___QueryEquityTierLimitConfigurationResponse = QueryEquityTierLimitConfigurationResponse

@typing.final
class QueryBlockRateLimitConfigurationRequest(google.protobuf.message.Message):
    """QueryBlockRateLimitConfigurationRequest is a request message for
    BlockRateLimitConfiguration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___QueryBlockRateLimitConfigurationRequest = QueryBlockRateLimitConfigurationRequest

@typing.final
class QueryBlockRateLimitConfigurationResponse(google.protobuf.message.Message):
    """QueryBlockRateLimitConfigurationResponse is a response message that contains
    the BlockRateLimitConfiguration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLOCK_RATE_LIMIT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def block_rate_limit_config(self) -> dydxprotocol.clob.block_rate_limit_config_pb2.BlockRateLimitConfiguration: ...
    def __init__(
        self,
        *,
        block_rate_limit_config: dydxprotocol.clob.block_rate_limit_config_pb2.BlockRateLimitConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["block_rate_limit_config", b"block_rate_limit_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["block_rate_limit_config", b"block_rate_limit_config"]) -> None: ...

global___QueryBlockRateLimitConfigurationResponse = QueryBlockRateLimitConfigurationResponse

@typing.final
class QueryStatefulOrderRequest(google.protobuf.message.Message):
    """QueryStatefulOrderRequest is a request message for StatefulOrder."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_ID_FIELD_NUMBER: builtins.int
    @property
    def order_id(self) -> dydxprotocol.clob.order_pb2.OrderId:
        """Order id to query."""

    def __init__(
        self,
        *,
        order_id: dydxprotocol.clob.order_pb2.OrderId | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order_id", b"order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order_id", b"order_id"]) -> None: ...

global___QueryStatefulOrderRequest = QueryStatefulOrderRequest

@typing.final
class QueryStatefulOrderResponse(google.protobuf.message.Message):
    """QueryStatefulOrderResponse is a response message that contains the stateful
    order.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_PLACEMENT_FIELD_NUMBER: builtins.int
    FILL_AMOUNT_FIELD_NUMBER: builtins.int
    TRIGGERED_FIELD_NUMBER: builtins.int
    fill_amount: builtins.int
    """Fill amounts."""
    triggered: builtins.bool
    """Triggered status."""
    @property
    def order_placement(self) -> dydxprotocol.clob.order_pb2.LongTermOrderPlacement:
        """Stateful order placement."""

    def __init__(
        self,
        *,
        order_placement: dydxprotocol.clob.order_pb2.LongTermOrderPlacement | None = ...,
        fill_amount: builtins.int = ...,
        triggered: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order_placement", b"order_placement"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fill_amount", b"fill_amount", "order_placement", b"order_placement", "triggered", b"triggered"]) -> None: ...

global___QueryStatefulOrderResponse = QueryStatefulOrderResponse

@typing.final
class QueryLiquidationsConfigurationRequest(google.protobuf.message.Message):
    """QueryLiquidationsConfigurationRequest is a request message for
    LiquidationsConfiguration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___QueryLiquidationsConfigurationRequest = QueryLiquidationsConfigurationRequest

@typing.final
class QueryLiquidationsConfigurationResponse(google.protobuf.message.Message):
    """QueryLiquidationsConfigurationResponse is a response message that contains
    the LiquidationsConfiguration.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIQUIDATIONS_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def liquidations_config(self) -> dydxprotocol.clob.liquidations_config_pb2.LiquidationsConfig: ...
    def __init__(
        self,
        *,
        liquidations_config: dydxprotocol.clob.liquidations_config_pb2.LiquidationsConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["liquidations_config", b"liquidations_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["liquidations_config", b"liquidations_config"]) -> None: ...

global___QueryLiquidationsConfigurationResponse = QueryLiquidationsConfigurationResponse

@typing.final
class QueryNextClobPairIdRequest(google.protobuf.message.Message):
    """QueryNextClobPairIdRequest is a request message for the next clob pair id"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___QueryNextClobPairIdRequest = QueryNextClobPairIdRequest

@typing.final
class QueryNextClobPairIdResponse(google.protobuf.message.Message):
    """QueryNextClobPairIdResponse is a response message for the next clob pair id"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NEXT_CLOB_PAIR_ID_FIELD_NUMBER: builtins.int
    next_clob_pair_id: builtins.int
    def __init__(
        self,
        *,
        next_clob_pair_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["next_clob_pair_id", b"next_clob_pair_id"]) -> None: ...

global___QueryNextClobPairIdResponse = QueryNextClobPairIdResponse

@typing.final
class StreamOrderbookUpdatesRequest(google.protobuf.message.Message):
    """StreamOrderbookUpdatesRequest is a request message for the
    StreamOrderbookUpdates method.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLOB_PAIR_ID_FIELD_NUMBER: builtins.int
    SUBACCOUNT_IDS_FIELD_NUMBER: builtins.int
    MARKET_IDS_FIELD_NUMBER: builtins.int
    @property
    def clob_pair_id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Clob pair ids to stream orderbook updates for."""

    @property
    def subaccount_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dydxprotocol.subaccounts.subaccount_pb2.SubaccountId]:
        """Subaccount ids to stream subaccount updates for."""

    @property
    def market_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Market ids for price updates."""

    def __init__(
        self,
        *,
        clob_pair_id: collections.abc.Iterable[builtins.int] | None = ...,
        subaccount_ids: collections.abc.Iterable[dydxprotocol.subaccounts.subaccount_pb2.SubaccountId] | None = ...,
        market_ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["clob_pair_id", b"clob_pair_id", "market_ids", b"market_ids", "subaccount_ids", b"subaccount_ids"]) -> None: ...

global___StreamOrderbookUpdatesRequest = StreamOrderbookUpdatesRequest

@typing.final
class StreamOrderbookUpdatesResponse(google.protobuf.message.Message):
    """StreamOrderbookUpdatesResponse is a response message for the
    StreamOrderbookUpdates method.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UPDATES_FIELD_NUMBER: builtins.int
    @property
    def updates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StreamUpdate]:
        """Batch of updates for the clob pair."""

    def __init__(
        self,
        *,
        updates: collections.abc.Iterable[global___StreamUpdate] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["updates", b"updates"]) -> None: ...

global___StreamOrderbookUpdatesResponse = StreamOrderbookUpdatesResponse

@typing.final
class StreamUpdate(google.protobuf.message.Message):
    """StreamUpdate is an update that will be pushed through the
    GRPC stream.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BLOCK_HEIGHT_FIELD_NUMBER: builtins.int
    EXEC_MODE_FIELD_NUMBER: builtins.int
    ORDERBOOK_UPDATE_FIELD_NUMBER: builtins.int
    ORDER_FILL_FIELD_NUMBER: builtins.int
    TAKER_ORDER_FIELD_NUMBER: builtins.int
    SUBACCOUNT_UPDATE_FIELD_NUMBER: builtins.int
    PRICE_UPDATE_FIELD_NUMBER: builtins.int
    block_height: builtins.int
    """Block height of the update."""
    exec_mode: builtins.int
    """Exec mode of the update."""
    @property
    def orderbook_update(self) -> global___StreamOrderbookUpdate: ...
    @property
    def order_fill(self) -> global___StreamOrderbookFill: ...
    @property
    def taker_order(self) -> global___StreamTakerOrder: ...
    @property
    def subaccount_update(self) -> dydxprotocol.subaccounts.streaming_pb2.StreamSubaccountUpdate: ...
    @property
    def price_update(self) -> dydxprotocol.prices.streaming_pb2.StreamPriceUpdate: ...
    def __init__(
        self,
        *,
        block_height: builtins.int = ...,
        exec_mode: builtins.int = ...,
        orderbook_update: global___StreamOrderbookUpdate | None = ...,
        order_fill: global___StreamOrderbookFill | None = ...,
        taker_order: global___StreamTakerOrder | None = ...,
        subaccount_update: dydxprotocol.subaccounts.streaming_pb2.StreamSubaccountUpdate | None = ...,
        price_update: dydxprotocol.prices.streaming_pb2.StreamPriceUpdate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order_fill", b"order_fill", "orderbook_update", b"orderbook_update", "price_update", b"price_update", "subaccount_update", b"subaccount_update", "taker_order", b"taker_order", "update_message", b"update_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["block_height", b"block_height", "exec_mode", b"exec_mode", "order_fill", b"order_fill", "orderbook_update", b"orderbook_update", "price_update", b"price_update", "subaccount_update", b"subaccount_update", "taker_order", b"taker_order", "update_message", b"update_message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["update_message", b"update_message"]) -> typing.Literal["orderbook_update", "order_fill", "taker_order", "subaccount_update", "price_update"] | None: ...

global___StreamUpdate = StreamUpdate

@typing.final
class StreamOrderbookUpdate(google.protobuf.message.Message):
    """StreamOrderbookUpdate provides information on an orderbook update. Used in
    the full node GRPC stream.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SNAPSHOT_FIELD_NUMBER: builtins.int
    UPDATES_FIELD_NUMBER: builtins.int
    snapshot: builtins.bool
    """Snapshot indicates if the response is from a snapshot of the orderbook.
    All updates should be ignored until snapshot is recieved.
    If the snapshot is true, then all previous entries should be
    discarded and the orderbook should be resynced.
    """
    @property
    def updates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dydxprotocol.indexer.off_chain_updates.off_chain_updates_pb2.OffChainUpdateV1]:
        """Orderbook updates for the clob pair. Can contain order place, removals,
        or updates.
        """

    def __init__(
        self,
        *,
        snapshot: builtins.bool = ...,
        updates: collections.abc.Iterable[dydxprotocol.indexer.off_chain_updates.off_chain_updates_pb2.OffChainUpdateV1] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["snapshot", b"snapshot", "updates", b"updates"]) -> None: ...

global___StreamOrderbookUpdate = StreamOrderbookUpdate

@typing.final
class StreamOrderbookFill(google.protobuf.message.Message):
    """StreamOrderbookFill provides information on an orderbook fill. Used in
    the full node GRPC stream.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLOB_MATCH_FIELD_NUMBER: builtins.int
    ORDERS_FIELD_NUMBER: builtins.int
    FILL_AMOUNTS_FIELD_NUMBER: builtins.int
    @property
    def clob_match(self) -> dydxprotocol.clob.matches_pb2.ClobMatch:
        """Clob match. Provides information on which orders were matched
        and the type of order.
        """

    @property
    def orders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dydxprotocol.clob.order_pb2.Order]:
        """All orders involved in the specified clob match. Used to look up
        price of a match through a given maker order id.
        """

    @property
    def fill_amounts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Resulting fill amounts for each order in the orders array."""

    def __init__(
        self,
        *,
        clob_match: dydxprotocol.clob.matches_pb2.ClobMatch | None = ...,
        orders: collections.abc.Iterable[dydxprotocol.clob.order_pb2.Order] | None = ...,
        fill_amounts: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["clob_match", b"clob_match"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["clob_match", b"clob_match", "fill_amounts", b"fill_amounts", "orders", b"orders"]) -> None: ...

global___StreamOrderbookFill = StreamOrderbookFill

@typing.final
class StreamTakerOrder(google.protobuf.message.Message):
    """StreamTakerOrder provides information on a taker order that was attempted
    to be matched on the orderbook.
    It is intended to be used only in full node streaming.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_FIELD_NUMBER: builtins.int
    LIQUIDATION_ORDER_FIELD_NUMBER: builtins.int
    TAKER_ORDER_STATUS_FIELD_NUMBER: builtins.int
    @property
    def order(self) -> dydxprotocol.clob.order_pb2.Order: ...
    @property
    def liquidation_order(self) -> dydxprotocol.clob.order_pb2.StreamLiquidationOrder: ...
    @property
    def taker_order_status(self) -> global___StreamTakerOrderStatus:
        """Information on the taker order after it is matched on the book,
        either successfully or unsuccessfully.
        """

    def __init__(
        self,
        *,
        order: dydxprotocol.clob.order_pb2.Order | None = ...,
        liquidation_order: dydxprotocol.clob.order_pb2.StreamLiquidationOrder | None = ...,
        taker_order_status: global___StreamTakerOrderStatus | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["liquidation_order", b"liquidation_order", "order", b"order", "taker_order", b"taker_order", "taker_order_status", b"taker_order_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["liquidation_order", b"liquidation_order", "order", b"order", "taker_order", b"taker_order", "taker_order_status", b"taker_order_status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["taker_order", b"taker_order"]) -> typing.Literal["order", "liquidation_order"] | None: ...

global___StreamTakerOrder = StreamTakerOrder

@typing.final
class StreamTakerOrderStatus(google.protobuf.message.Message):
    """StreamTakerOrderStatus is a representation of a taker order
    after it is attempted to be matched on the orderbook.
    It is intended to be used only in full node streaming.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ORDER_STATUS_FIELD_NUMBER: builtins.int
    REMAINING_QUANTUMS_FIELD_NUMBER: builtins.int
    OPTIMISTICALLY_FILLED_QUANTUMS_FIELD_NUMBER: builtins.int
    order_status: builtins.int
    """The state of the taker order after attempting to match it against the
    orderbook. Possible enum values can be found here:
    https://github.com/dydxprotocol/v4-chain/blob/main/protocol/x/clob/types/orderbook.go#L105
    """
    remaining_quantums: builtins.int
    """The amount of remaining (non-matched) base quantums of this taker order."""
    optimistically_filled_quantums: builtins.int
    """The amount of base quantums that were *optimistically* filled for this
    taker order when the order is matched against the orderbook. Note that if
    any quantums of this order were optimistically filled or filled in state
    before this invocation of the matching loop, this value will not include
    them.
    """
    def __init__(
        self,
        *,
        order_status: builtins.int = ...,
        remaining_quantums: builtins.int = ...,
        optimistically_filled_quantums: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["optimistically_filled_quantums", b"optimistically_filled_quantums", "order_status", b"order_status", "remaining_quantums", b"remaining_quantums"]) -> None: ...

global___StreamTakerOrderStatus = StreamTakerOrderStatus
