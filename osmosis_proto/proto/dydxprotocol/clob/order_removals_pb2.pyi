"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import dydxprotocol.clob.order_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class OrderRemoval(google.protobuf.message.Message):
    """OrderRemoval is a request type used for forced removal of stateful orders."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _RemovalReason:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _RemovalReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OrderRemoval._RemovalReason.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        REMOVAL_REASON_UNSPECIFIED: OrderRemoval._RemovalReason.ValueType  # 0
        """REMOVAL_REASON_UNSPECIFIED represents an unspecified removal reason. This
        removal reason is used as a catchall and should never appear on an
        OrderRemoval in the operations queue.
        """
        REMOVAL_REASON_UNDERCOLLATERALIZED: OrderRemoval._RemovalReason.ValueType  # 1
        """REMOVAL_REASON_UNDERCOLLATERALIZED represents a removal of an order which
        if filled in isolation with respect to the current state of the
        subaccount would leave the subaccount undercollateralized.
        """
        REMOVAL_REASON_INVALID_REDUCE_ONLY: OrderRemoval._RemovalReason.ValueType  # 2
        """REMOVAL_REASON_INVALID_REDUCE_ONLY represents a removal of a reduce-only
        order which if filled in isolation with respect to the current state of
        the subaccount would cause the subaccount's existing position to increase
        or change sides.
        """
        REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER: OrderRemoval._RemovalReason.ValueType  # 3
        """REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER represents a removal of
        a stateful post-only order that was deemed invalid because it crossed
        maker orders on the book of the proposer.
        """
        REMOVAL_REASON_INVALID_SELF_TRADE: OrderRemoval._RemovalReason.ValueType  # 4
        """REMOVAL_REASON_INVALID_SELF_TRADE represents a removal of a stateful
        order that was deemed invalid because it constituted a self trade on the
        proposers orderbook.
        """
        REMOVAL_REASON_CONDITIONAL_FOK_COULD_NOT_BE_FULLY_FILLED: OrderRemoval._RemovalReason.ValueType  # 5
        """REMOVAL_REASON_CONDITIONAL_FOK_COULD_NOT_BE_FULLY_FILLED represents a
        removal of a conditional FOK order that was deemed invalid because it
        could not be completely filled. Conditional FOK orders should always be
        fully-filled or removed in the block after they are triggered.
        """
        REMOVAL_REASON_CONDITIONAL_IOC_WOULD_REST_ON_BOOK: OrderRemoval._RemovalReason.ValueType  # 6
        """REMOVAL_REASON_CONDITIONAL_IOC_WOULD_REST_ON_BOOK represents a removal
        of a conditional IOC order.
        Conditional IOC orders should always have their remaining size removed
        in the block after they are triggered.
        """
        REMOVAL_REASON_FULLY_FILLED: OrderRemoval._RemovalReason.ValueType  # 7
        """REMOVAL_REASON_FULLY_FILLED represents a removal of an order that
        was fully filled and should therefore be removed from state.
        """
        REMOVAL_REASON_VIOLATES_ISOLATED_SUBACCOUNT_CONSTRAINTS: OrderRemoval._RemovalReason.ValueType  # 8
        """REMOVAL_REASON_FULLY_FILLED represents a removal of an order that
         would lead to the subaccount violating isolated subaccount constraints.
        """
        REMOVAL_REASON_PERMISSIONED_KEY_EXPIRED: OrderRemoval._RemovalReason.ValueType  # 9
        """REMOVAL_REASON_PERMISSIONED_KEY_EXPIRED represents a removal of an order
        that was placed using an expired permissioned key.
        """

    class RemovalReason(_RemovalReason, metaclass=_RemovalReasonEnumTypeWrapper): ...
    REMOVAL_REASON_UNSPECIFIED: OrderRemoval.RemovalReason.ValueType  # 0
    """REMOVAL_REASON_UNSPECIFIED represents an unspecified removal reason. This
    removal reason is used as a catchall and should never appear on an
    OrderRemoval in the operations queue.
    """
    REMOVAL_REASON_UNDERCOLLATERALIZED: OrderRemoval.RemovalReason.ValueType  # 1
    """REMOVAL_REASON_UNDERCOLLATERALIZED represents a removal of an order which
    if filled in isolation with respect to the current state of the
    subaccount would leave the subaccount undercollateralized.
    """
    REMOVAL_REASON_INVALID_REDUCE_ONLY: OrderRemoval.RemovalReason.ValueType  # 2
    """REMOVAL_REASON_INVALID_REDUCE_ONLY represents a removal of a reduce-only
    order which if filled in isolation with respect to the current state of
    the subaccount would cause the subaccount's existing position to increase
    or change sides.
    """
    REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER: OrderRemoval.RemovalReason.ValueType  # 3
    """REMOVAL_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORDER represents a removal of
    a stateful post-only order that was deemed invalid because it crossed
    maker orders on the book of the proposer.
    """
    REMOVAL_REASON_INVALID_SELF_TRADE: OrderRemoval.RemovalReason.ValueType  # 4
    """REMOVAL_REASON_INVALID_SELF_TRADE represents a removal of a stateful
    order that was deemed invalid because it constituted a self trade on the
    proposers orderbook.
    """
    REMOVAL_REASON_CONDITIONAL_FOK_COULD_NOT_BE_FULLY_FILLED: OrderRemoval.RemovalReason.ValueType  # 5
    """REMOVAL_REASON_CONDITIONAL_FOK_COULD_NOT_BE_FULLY_FILLED represents a
    removal of a conditional FOK order that was deemed invalid because it
    could not be completely filled. Conditional FOK orders should always be
    fully-filled or removed in the block after they are triggered.
    """
    REMOVAL_REASON_CONDITIONAL_IOC_WOULD_REST_ON_BOOK: OrderRemoval.RemovalReason.ValueType  # 6
    """REMOVAL_REASON_CONDITIONAL_IOC_WOULD_REST_ON_BOOK represents a removal
    of a conditional IOC order.
    Conditional IOC orders should always have their remaining size removed
    in the block after they are triggered.
    """
    REMOVAL_REASON_FULLY_FILLED: OrderRemoval.RemovalReason.ValueType  # 7
    """REMOVAL_REASON_FULLY_FILLED represents a removal of an order that
    was fully filled and should therefore be removed from state.
    """
    REMOVAL_REASON_VIOLATES_ISOLATED_SUBACCOUNT_CONSTRAINTS: OrderRemoval.RemovalReason.ValueType  # 8
    """REMOVAL_REASON_FULLY_FILLED represents a removal of an order that
     would lead to the subaccount violating isolated subaccount constraints.
    """
    REMOVAL_REASON_PERMISSIONED_KEY_EXPIRED: OrderRemoval.RemovalReason.ValueType  # 9
    """REMOVAL_REASON_PERMISSIONED_KEY_EXPIRED represents a removal of an order
    that was placed using an expired permissioned key.
    """

    ORDER_ID_FIELD_NUMBER: builtins.int
    REMOVAL_REASON_FIELD_NUMBER: builtins.int
    removal_reason: global___OrderRemoval.RemovalReason.ValueType
    @property
    def order_id(self) -> dydxprotocol.clob.order_pb2.OrderId: ...
    def __init__(
        self,
        *,
        order_id: dydxprotocol.clob.order_pb2.OrderId | None = ...,
        removal_reason: global___OrderRemoval.RemovalReason.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["order_id", b"order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["order_id", b"order_id", "removal_reason", b"removal_reason"]) -> None: ...

global___OrderRemoval = OrderRemoval
