"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import dydxprotocol.vault.vault_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class QuotingParams(google.protobuf.message.Message):
    """QuotingParams stores vault quoting parameters."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAYERS_FIELD_NUMBER: builtins.int
    SPREAD_MIN_PPM_FIELD_NUMBER: builtins.int
    SPREAD_BUFFER_PPM_FIELD_NUMBER: builtins.int
    SKEW_FACTOR_PPM_FIELD_NUMBER: builtins.int
    ORDER_SIZE_PCT_PPM_FIELD_NUMBER: builtins.int
    ORDER_EXPIRATION_SECONDS_FIELD_NUMBER: builtins.int
    ACTIVATION_THRESHOLD_QUOTE_QUANTUMS_FIELD_NUMBER: builtins.int
    layers: builtins.int
    """The number of layers of orders a vault places. For example if
    `layers=2`, a vault places 2 asks and 2 bids.
    """
    spread_min_ppm: builtins.int
    """The minimum base spread when a vault quotes around reservation price."""
    spread_buffer_ppm: builtins.int
    """The buffer amount to add to min_price_change_ppm to arrive at `spread`
    according to formula:
    `spread = max(spread_min_ppm, min_price_change_ppm + spread_buffer_ppm)`.
    """
    skew_factor_ppm: builtins.int
    """The factor that determines how aggressive a vault skews its orders."""
    order_size_pct_ppm: builtins.int
    """The percentage of vault equity that each order is sized at."""
    order_expiration_seconds: builtins.int
    """The duration that a vault's orders are valid for."""
    activation_threshold_quote_quantums: builtins.bytes
    """The number of quote quantums in quote asset that a vault with no perpetual
    positions must have to activate, i.e. if a vault has no perpetual positions
    and has strictly less than this amount of quote asset, it will not
    activate.
    """
    def __init__(
        self,
        *,
        layers: builtins.int = ...,
        spread_min_ppm: builtins.int = ...,
        spread_buffer_ppm: builtins.int = ...,
        skew_factor_ppm: builtins.int = ...,
        order_size_pct_ppm: builtins.int = ...,
        order_expiration_seconds: builtins.int = ...,
        activation_threshold_quote_quantums: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["activation_threshold_quote_quantums", b"activation_threshold_quote_quantums", "layers", b"layers", "order_expiration_seconds", b"order_expiration_seconds", "order_size_pct_ppm", b"order_size_pct_ppm", "skew_factor_ppm", b"skew_factor_ppm", "spread_buffer_ppm", b"spread_buffer_ppm", "spread_min_ppm", b"spread_min_ppm"]) -> None: ...

global___QuotingParams = QuotingParams

@typing.final
class VaultParams(google.protobuf.message.Message):
    """VaultParams stores vault parameters."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    QUOTING_PARAMS_FIELD_NUMBER: builtins.int
    status: dydxprotocol.vault.vault_pb2.VaultStatus.ValueType
    """Status of the vault."""
    @property
    def quoting_params(self) -> global___QuotingParams:
        """Quoting parameters of the vault."""

    def __init__(
        self,
        *,
        status: dydxprotocol.vault.vault_pb2.VaultStatus.ValueType = ...,
        quoting_params: global___QuotingParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["quoting_params", b"quoting_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["quoting_params", b"quoting_params", "status", b"status"]) -> None: ...

global___VaultParams = VaultParams

@typing.final
class OperatorParams(google.protobuf.message.Message):
    """OperatorParams stores parameters regarding megavault operator."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERATOR_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    operator: builtins.str
    """Address of the operator."""
    @property
    def metadata(self) -> global___OperatorMetadata:
        """Metadata of the operator."""

    def __init__(
        self,
        *,
        operator: builtins.str = ...,
        metadata: global___OperatorMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["metadata", b"metadata", "operator", b"operator"]) -> None: ...

global___OperatorParams = OperatorParams

@typing.final
class OperatorMetadata(google.protobuf.message.Message):
    """OperatorMetadata stores metadata regarding megavault operator."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Name of the operator."""
    description: builtins.str
    """Description of the operator."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "name", b"name"]) -> None: ...

global___OperatorMetadata = OperatorMetadata

@typing.final
class Params(google.protobuf.message.Message):
    """Deprecated: Params stores `x/vault` parameters.
    Deprecated since v6.x as is replaced by QuotingParams.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAYERS_FIELD_NUMBER: builtins.int
    SPREAD_MIN_PPM_FIELD_NUMBER: builtins.int
    SPREAD_BUFFER_PPM_FIELD_NUMBER: builtins.int
    SKEW_FACTOR_PPM_FIELD_NUMBER: builtins.int
    ORDER_SIZE_PCT_PPM_FIELD_NUMBER: builtins.int
    ORDER_EXPIRATION_SECONDS_FIELD_NUMBER: builtins.int
    ACTIVATION_THRESHOLD_QUOTE_QUANTUMS_FIELD_NUMBER: builtins.int
    layers: builtins.int
    """The number of layers of orders a vault places. For example if
    `layers=2`, a vault places 2 asks and 2 bids.
    """
    spread_min_ppm: builtins.int
    """The minimum base spread when a vault quotes around reservation price."""
    spread_buffer_ppm: builtins.int
    """The buffer amount to add to min_price_change_ppm to arrive at `spread`
    according to formula:
    `spread = max(spread_min_ppm, min_price_change_ppm + spread_buffer_ppm)`.
    """
    skew_factor_ppm: builtins.int
    """The factor that determines how aggressive a vault skews its orders."""
    order_size_pct_ppm: builtins.int
    """The percentage of vault equity that each order is sized at."""
    order_expiration_seconds: builtins.int
    """The duration that a vault's orders are valid for."""
    activation_threshold_quote_quantums: builtins.bytes
    """The number of quote quantums in quote asset that a vault with no perpetual
    positions must have to activate, i.e. if a vault has no perpetual positions
    and has strictly less than this amount of quote asset, it will not
    activate.
    """
    def __init__(
        self,
        *,
        layers: builtins.int = ...,
        spread_min_ppm: builtins.int = ...,
        spread_buffer_ppm: builtins.int = ...,
        skew_factor_ppm: builtins.int = ...,
        order_size_pct_ppm: builtins.int = ...,
        order_expiration_seconds: builtins.int = ...,
        activation_threshold_quote_quantums: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["activation_threshold_quote_quantums", b"activation_threshold_quote_quantums", "layers", b"layers", "order_expiration_seconds", b"order_expiration_seconds", "order_size_pct_ppm", b"order_size_pct_ppm", "skew_factor_ppm", b"skew_factor_ppm", "spread_buffer_ppm", b"spread_buffer_ppm", "spread_min_ppm", b"spread_min_ppm"]) -> None: ...

global___Params = Params
