"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class BlockStats(google.protobuf.message.Message):
    """BlockStats is used to store stats transiently within the scope of a block."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Fill(google.protobuf.message.Message):
        """Fill records data about a fill on this block."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TAKER_FIELD_NUMBER: builtins.int
        MAKER_FIELD_NUMBER: builtins.int
        NOTIONAL_FIELD_NUMBER: builtins.int
        taker: builtins.str
        """Taker wallet address"""
        maker: builtins.str
        """Maker wallet address"""
        notional: builtins.int
        """Notional USDC filled in quantums"""
        def __init__(
            self,
            *,
            taker: builtins.str = ...,
            maker: builtins.str = ...,
            notional: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["maker", b"maker", "notional", b"notional", "taker", b"taker"]) -> None: ...

    FILLS_FIELD_NUMBER: builtins.int
    @property
    def fills(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BlockStats.Fill]:
        """The fills that occured on this block."""

    def __init__(
        self,
        *,
        fills: collections.abc.Iterable[global___BlockStats.Fill] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["fills", b"fills"]) -> None: ...

global___BlockStats = BlockStats

@typing.final
class StatsMetadata(google.protobuf.message.Message):
    """StatsMetadata stores metadata for the x/stats module"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRAILING_EPOCH_FIELD_NUMBER: builtins.int
    trailing_epoch: builtins.int
    """The oldest epoch that is included in the stats. The next epoch to be
    removed from the window.
    """
    def __init__(
        self,
        *,
        trailing_epoch: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["trailing_epoch", b"trailing_epoch"]) -> None: ...

global___StatsMetadata = StatsMetadata

@typing.final
class EpochStats(google.protobuf.message.Message):
    """EpochStats stores stats for a particular epoch"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class UserWithStats(google.protobuf.message.Message):
        """A user and its associated stats"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        USER_FIELD_NUMBER: builtins.int
        STATS_FIELD_NUMBER: builtins.int
        user: builtins.str
        @property
        def stats(self) -> global___UserStats: ...
        def __init__(
            self,
            *,
            user: builtins.str = ...,
            stats: global___UserStats | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["stats", b"stats"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["stats", b"stats", "user", b"user"]) -> None: ...

    EPOCH_END_TIME_FIELD_NUMBER: builtins.int
    STATS_FIELD_NUMBER: builtins.int
    @property
    def epoch_end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Epoch end time"""

    @property
    def stats(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EpochStats.UserWithStats]:
        """Stats for each user in this epoch. Sorted by user."""

    def __init__(
        self,
        *,
        epoch_end_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        stats: collections.abc.Iterable[global___EpochStats.UserWithStats] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["epoch_end_time", b"epoch_end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["epoch_end_time", b"epoch_end_time", "stats", b"stats"]) -> None: ...

global___EpochStats = EpochStats

@typing.final
class GlobalStats(google.protobuf.message.Message):
    """GlobalStats stores global stats"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTIONAL_TRADED_FIELD_NUMBER: builtins.int
    notional_traded: builtins.int
    """Notional USDC traded in quantums"""
    def __init__(
        self,
        *,
        notional_traded: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["notional_traded", b"notional_traded"]) -> None: ...

global___GlobalStats = GlobalStats

@typing.final
class UserStats(google.protobuf.message.Message):
    """UserStats stores stats for a User"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAKER_NOTIONAL_FIELD_NUMBER: builtins.int
    MAKER_NOTIONAL_FIELD_NUMBER: builtins.int
    taker_notional: builtins.int
    """Taker USDC in quantums"""
    maker_notional: builtins.int
    """Maker USDC in quantums"""
    def __init__(
        self,
        *,
        taker_notional: builtins.int = ...,
        maker_notional: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["maker_notional", b"maker_notional", "taker_notional", b"taker_notional"]) -> None: ...

global___UserStats = UserStats

@typing.final
class CachedStakeAmount(google.protobuf.message.Message):
    """CachedStakeAmount stores the last calculated total staked amount for address"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STAKED_AMOUNT_FIELD_NUMBER: builtins.int
    CACHED_AT_FIELD_NUMBER: builtins.int
    staked_amount: builtins.bytes
    """Last calculated total staked amount by the delegator (in coin amount)."""
    cached_at: builtins.int
    """Block time at which the calculation is cached (in Unix Epoch seconds)
    Rounded down to nearest second.
    """
    def __init__(
        self,
        *,
        staked_amount: builtins.bytes = ...,
        cached_at: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["cached_at", b"cached_at", "staked_amount", b"staked_amount"]) -> None: ...

global___CachedStakeAmount = CachedStakeAmount
