"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import cosmos.base.v1beta1.coin_pb2
import dydxprotocol.subaccounts.subaccount_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Transfer(google.protobuf.message.Message):
    """Transfer represents a single transfer between two subaccounts."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SENDER_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    asset_id: builtins.int
    """Id of the asset to transfer."""
    amount: builtins.int
    """The amount of asset to transfer"""
    @property
    def sender(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """The sender subaccount ID."""

    @property
    def recipient(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """The recipient subaccount ID."""

    def __init__(
        self,
        *,
        sender: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        recipient: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        asset_id: builtins.int = ...,
        amount: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["recipient", b"recipient", "sender", b"sender"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["amount", b"amount", "asset_id", b"asset_id", "recipient", b"recipient", "sender", b"sender"]) -> None: ...

global___Transfer = Transfer

@typing.final
class MsgDepositToSubaccount(google.protobuf.message.Message):
    """MsgDepositToSubaccount represents a single transfer from an `x/bank`
    account to an `x/subaccounts` subaccount.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SENDER_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    QUANTUMS_FIELD_NUMBER: builtins.int
    sender: builtins.str
    """The sender wallet address."""
    asset_id: builtins.int
    """Id of the asset to transfer."""
    quantums: builtins.int
    """The number of quantums of asset to transfer."""
    @property
    def recipient(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """The recipient subaccount ID."""

    def __init__(
        self,
        *,
        sender: builtins.str = ...,
        recipient: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        asset_id: builtins.int = ...,
        quantums: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["recipient", b"recipient"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["asset_id", b"asset_id", "quantums", b"quantums", "recipient", b"recipient", "sender", b"sender"]) -> None: ...

global___MsgDepositToSubaccount = MsgDepositToSubaccount

@typing.final
class MsgWithdrawFromSubaccount(google.protobuf.message.Message):
    """MsgWithdrawFromSubaccount represents a single transfer from an
    `x/subaccounts` subaccount to an `x/bank` account.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SENDER_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    QUANTUMS_FIELD_NUMBER: builtins.int
    recipient: builtins.str
    """The recipient wallet address."""
    asset_id: builtins.int
    """Id of the asset to transfer."""
    quantums: builtins.int
    """The number of quantums of asset to transfer."""
    @property
    def sender(self) -> dydxprotocol.subaccounts.subaccount_pb2.SubaccountId:
        """The sender subaccount ID."""

    def __init__(
        self,
        *,
        sender: dydxprotocol.subaccounts.subaccount_pb2.SubaccountId | None = ...,
        recipient: builtins.str = ...,
        asset_id: builtins.int = ...,
        quantums: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["sender", b"sender"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["asset_id", b"asset_id", "quantums", b"quantums", "recipient", b"recipient", "sender", b"sender"]) -> None: ...

global___MsgWithdrawFromSubaccount = MsgWithdrawFromSubaccount

@typing.final
class MsgSendFromModuleToAccount(google.protobuf.message.Message):
    """MsgSendFromModuleToAccount represents a single transfer from a module
    to an `x/bank` account (can be either a module account address or a user
    account address).
    Should only be executed by governance.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTHORITY_FIELD_NUMBER: builtins.int
    SENDER_MODULE_NAME_FIELD_NUMBER: builtins.int
    RECIPIENT_FIELD_NUMBER: builtins.int
    COIN_FIELD_NUMBER: builtins.int
    authority: builtins.str
    sender_module_name: builtins.str
    """The sender module name."""
    recipient: builtins.str
    """The recipient account address (can be either a module account address
    or a user account address).
    """
    @property
    def coin(self) -> cosmos.base.v1beta1.coin_pb2.Coin:
        """The coin to transfer, which specifies both denom and amount."""

    def __init__(
        self,
        *,
        authority: builtins.str = ...,
        sender_module_name: builtins.str = ...,
        recipient: builtins.str = ...,
        coin: cosmos.base.v1beta1.coin_pb2.Coin | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["coin", b"coin"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["authority", b"authority", "coin", b"coin", "recipient", b"recipient", "sender_module_name", b"sender_module_name"]) -> None: ...

global___MsgSendFromModuleToAccount = MsgSendFromModuleToAccount
