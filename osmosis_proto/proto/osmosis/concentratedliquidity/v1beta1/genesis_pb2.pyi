"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import osmosis.accum.v1beta1.accum_pb2
import osmosis.concentratedliquidity.params_pb2
import osmosis.concentratedliquidity.v1beta1.incentive_record_pb2
import osmosis.concentratedliquidity.v1beta1.position_pb2
import osmosis.concentratedliquidity.v1beta1.tick_info_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class FullTick(google.protobuf.message.Message):
    """FullTick contains tick index and pool id along with other tick model
    information.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_ID_FIELD_NUMBER: builtins.int
    TICK_INDEX_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    pool_id: builtins.int
    """pool id associated with the tick."""
    tick_index: builtins.int
    """tick's index."""
    @property
    def info(self) -> osmosis.concentratedliquidity.v1beta1.tick_info_pb2.TickInfo:
        """tick's info."""

    def __init__(
        self,
        *,
        pool_id: builtins.int = ...,
        tick_index: builtins.int = ...,
        info: osmosis.concentratedliquidity.v1beta1.tick_info_pb2.TickInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["info", b"info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["info", b"info", "pool_id", b"pool_id", "tick_index", b"tick_index"]) -> None: ...

global___FullTick = FullTick

@typing.final
class PoolData(google.protobuf.message.Message):
    """PoolData represents a serialized pool along with its ticks
    for genesis state.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOL_FIELD_NUMBER: builtins.int
    TICKS_FIELD_NUMBER: builtins.int
    SPREAD_REWARD_ACCUMULATOR_FIELD_NUMBER: builtins.int
    INCENTIVES_ACCUMULATORS_FIELD_NUMBER: builtins.int
    INCENTIVE_RECORDS_FIELD_NUMBER: builtins.int
    @property
    def pool(self) -> google.protobuf.any_pb2.Any:
        """pool struct"""

    @property
    def ticks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FullTick]:
        """pool's ticks"""

    @property
    def spread_reward_accumulator(self) -> global___AccumObject: ...
    @property
    def incentives_accumulators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AccumObject]: ...
    @property
    def incentive_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[osmosis.concentratedliquidity.v1beta1.incentive_record_pb2.IncentiveRecord]:
        """incentive records to be set"""

    def __init__(
        self,
        *,
        pool: google.protobuf.any_pb2.Any | None = ...,
        ticks: collections.abc.Iterable[global___FullTick] | None = ...,
        spread_reward_accumulator: global___AccumObject | None = ...,
        incentives_accumulators: collections.abc.Iterable[global___AccumObject] | None = ...,
        incentive_records: collections.abc.Iterable[osmosis.concentratedliquidity.v1beta1.incentive_record_pb2.IncentiveRecord] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pool", b"pool", "spread_reward_accumulator", b"spread_reward_accumulator"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["incentive_records", b"incentive_records", "incentives_accumulators", b"incentives_accumulators", "pool", b"pool", "spread_reward_accumulator", b"spread_reward_accumulator", "ticks", b"ticks"]) -> None: ...

global___PoolData = PoolData

@typing.final
class PositionData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POSITION_FIELD_NUMBER: builtins.int
    LOCK_ID_FIELD_NUMBER: builtins.int
    SPREAD_REWARD_ACCUM_RECORD_FIELD_NUMBER: builtins.int
    UPTIME_ACCUM_RECORDS_FIELD_NUMBER: builtins.int
    lock_id: builtins.int
    @property
    def position(self) -> osmosis.concentratedliquidity.v1beta1.position_pb2.Position: ...
    @property
    def spread_reward_accum_record(self) -> osmosis.accum.v1beta1.accum_pb2.Record: ...
    @property
    def uptime_accum_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[osmosis.accum.v1beta1.accum_pb2.Record]: ...
    def __init__(
        self,
        *,
        position: osmosis.concentratedliquidity.v1beta1.position_pb2.Position | None = ...,
        lock_id: builtins.int = ...,
        spread_reward_accum_record: osmosis.accum.v1beta1.accum_pb2.Record | None = ...,
        uptime_accum_records: collections.abc.Iterable[osmosis.accum.v1beta1.accum_pb2.Record] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["position", b"position", "spread_reward_accum_record", b"spread_reward_accum_record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["lock_id", b"lock_id", "position", b"position", "spread_reward_accum_record", b"spread_reward_accum_record", "uptime_accum_records", b"uptime_accum_records"]) -> None: ...

global___PositionData = PositionData

@typing.final
class GenesisState(google.protobuf.message.Message):
    """GenesisState defines the concentrated liquidity module's genesis state."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARAMS_FIELD_NUMBER: builtins.int
    POOL_DATA_FIELD_NUMBER: builtins.int
    POSITION_DATA_FIELD_NUMBER: builtins.int
    NEXT_POSITION_ID_FIELD_NUMBER: builtins.int
    NEXT_INCENTIVE_RECORD_ID_FIELD_NUMBER: builtins.int
    INCENTIVES_ACCUMULATOR_POOL_ID_MIGRATION_THRESHOLD_FIELD_NUMBER: builtins.int
    SPREAD_FACTOR_POOL_ID_MIGRATION_THRESHOLD_FIELD_NUMBER: builtins.int
    next_position_id: builtins.int
    next_incentive_record_id: builtins.int
    incentives_accumulator_pool_id_migration_threshold: builtins.int
    spread_factor_pool_id_migration_threshold: builtins.int
    @property
    def params(self) -> osmosis.concentratedliquidity.params_pb2.Params:
        """params are all the parameters of the module"""

    @property
    def pool_data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PoolData]:
        """pool data containing serialized pool struct and ticks."""

    @property
    def position_data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PositionData]: ...
    def __init__(
        self,
        *,
        params: osmosis.concentratedliquidity.params_pb2.Params | None = ...,
        pool_data: collections.abc.Iterable[global___PoolData] | None = ...,
        position_data: collections.abc.Iterable[global___PositionData] | None = ...,
        next_position_id: builtins.int = ...,
        next_incentive_record_id: builtins.int = ...,
        incentives_accumulator_pool_id_migration_threshold: builtins.int = ...,
        spread_factor_pool_id_migration_threshold: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["params", b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["incentives_accumulator_pool_id_migration_threshold", b"incentives_accumulator_pool_id_migration_threshold", "next_incentive_record_id", b"next_incentive_record_id", "next_position_id", b"next_position_id", "params", b"params", "pool_data", b"pool_data", "position_data", b"position_data", "spread_factor_pool_id_migration_threshold", b"spread_factor_pool_id_migration_threshold"]) -> None: ...

global___GenesisState = GenesisState

@typing.final
class AccumObject(google.protobuf.message.Message):
    """In original struct of Accum object, store.KVStore is stored together.
    For handling genesis, we do not need to include store.KVStore since we use
    CL module's KVStore.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ACCUM_CONTENT_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Accumulator's name (pulled from AccumulatorContent)"""
    @property
    def accum_content(self) -> osmosis.accum.v1beta1.accum_pb2.AccumulatorContent: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        accum_content: osmosis.accum.v1beta1.accum_pb2.AccumulatorContent | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["accum_content", b"accum_content"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["accum_content", b"accum_content", "name", b"name"]) -> None: ...

global___AccumObject = AccumObject
