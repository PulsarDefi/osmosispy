"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import cosmos.base.v1beta1.coin_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class IncentiveRecord(google.protobuf.message.Message):
    """IncentiveRecord is the high-level struct we use to deal with an independent
    incentive being distributed on a pool. Note that PoolId, Denom, and MinUptime
    are included in the key so we avoid storing them in state, hence the
    distinction between IncentiveRecord and IncentiveRecordBody.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INCENTIVE_ID_FIELD_NUMBER: builtins.int
    POOL_ID_FIELD_NUMBER: builtins.int
    INCENTIVE_RECORD_BODY_FIELD_NUMBER: builtins.int
    MIN_UPTIME_FIELD_NUMBER: builtins.int
    incentive_id: builtins.int
    """incentive_id is the id uniquely identifying this incentive record."""
    pool_id: builtins.int
    @property
    def incentive_record_body(self) -> global___IncentiveRecordBody:
        """incentive record body holds necessary"""

    @property
    def min_uptime(self) -> google.protobuf.duration_pb2.Duration:
        """min_uptime is the minimum uptime required for liquidity to qualify for this
        incentive. It should be always be one of the supported uptimes in
        types.SupportedUptimes
        """

    def __init__(
        self,
        *,
        incentive_id: builtins.int = ...,
        pool_id: builtins.int = ...,
        incentive_record_body: global___IncentiveRecordBody | None = ...,
        min_uptime: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["incentive_record_body", b"incentive_record_body", "min_uptime", b"min_uptime"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["incentive_id", b"incentive_id", "incentive_record_body", b"incentive_record_body", "min_uptime", b"min_uptime", "pool_id", b"pool_id"]) -> None: ...

global___IncentiveRecord = IncentiveRecord

@typing.final
class IncentiveRecordBody(google.protobuf.message.Message):
    """IncentiveRecordBody represents the body stored in state for each individual
    record.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REMAINING_COIN_FIELD_NUMBER: builtins.int
    EMISSION_RATE_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    emission_rate: builtins.str
    """emission_rate is the incentive emission rate per second"""
    @property
    def remaining_coin(self) -> cosmos.base.v1beta1.coin_pb2.DecCoin:
        """remaining_coin is the total amount of incentives to be distributed"""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """start_time is the time when the incentive starts distributing"""

    def __init__(
        self,
        *,
        remaining_coin: cosmos.base.v1beta1.coin_pb2.DecCoin | None = ...,
        emission_rate: builtins.str = ...,
        start_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["remaining_coin", b"remaining_coin", "start_time", b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["emission_rate", b"emission_rate", "remaining_coin", b"remaining_coin", "start_time", b"start_time"]) -> None: ...

global___IncentiveRecordBody = IncentiveRecordBody
