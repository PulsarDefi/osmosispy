"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class MsgClaimDaily(google.protobuf.message.Message):
    """ClaimDaily"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIMER_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    claimer: builtins.str
    """Address of the claimer"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    def __init__(
        self,
        *,
        claimer: builtins.str = ...,
        airdrop_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["airdrop_id", b"airdrop_id", "claimer", b"claimer"]) -> None: ...

global___MsgClaimDaily = MsgClaimDaily

@typing.final
class MsgClaimDailyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgClaimDailyResponse = MsgClaimDailyResponse

@typing.final
class MsgClaimEarly(google.protobuf.message.Message):
    """ClaimEarly"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLAIMER_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    claimer: builtins.str
    """Address of the claimer"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    def __init__(
        self,
        *,
        claimer: builtins.str = ...,
        airdrop_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["airdrop_id", b"airdrop_id", "claimer", b"claimer"]) -> None: ...

global___MsgClaimEarly = MsgClaimEarly

@typing.final
class MsgClaimEarlyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgClaimEarlyResponse = MsgClaimEarlyResponse

@typing.final
class MsgCreateAirdrop(google.protobuf.message.Message):
    """CreateAirdrop"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADMIN_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    REWARD_DENOM_FIELD_NUMBER: builtins.int
    DISTRIBUTION_START_DATE_FIELD_NUMBER: builtins.int
    DISTRIBUTION_END_DATE_FIELD_NUMBER: builtins.int
    CLAWBACK_DATE_FIELD_NUMBER: builtins.int
    CLAIM_TYPE_DEADLINE_DATE_FIELD_NUMBER: builtins.int
    EARLY_CLAIM_PENALTY_FIELD_NUMBER: builtins.int
    DISTRIBUTOR_ADDRESS_FIELD_NUMBER: builtins.int
    ALLOCATOR_ADDRESS_FIELD_NUMBER: builtins.int
    LINKER_ADDRESS_FIELD_NUMBER: builtins.int
    admin: builtins.str
    """Airdrop admin address"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    reward_denom: builtins.str
    """Denom used when distributing rewards"""
    early_claim_penalty: builtins.str
    """Penalty for claiming rewards early - e.g. 0.5 means claiming early will
    result in losing 50% of rewards
    """
    distributor_address: builtins.str
    """Account that holds the total reward balance and distributes to users"""
    allocator_address: builtins.str
    """Admin account with permissions to add or update allocations"""
    linker_address: builtins.str
    """Admin account with permissions to link addresseses"""
    @property
    def distribution_start_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The first date that claiming begins and rewards are distributed"""

    @property
    def distribution_end_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The last date for rewards to be distributed. Immediately after this date
        the rewards can no longer be claimed, but rewards have not been clawed back
        yet
        """

    @property
    def clawback_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Date with which the rewards are clawed back (occurs after the distribution
        end date)
        """

    @property
    def claim_type_deadline_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Deadline for the user to make a decision on their claim type"""

    def __init__(
        self,
        *,
        admin: builtins.str = ...,
        airdrop_id: builtins.str = ...,
        reward_denom: builtins.str = ...,
        distribution_start_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        distribution_end_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        clawback_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        claim_type_deadline_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        early_claim_penalty: builtins.str = ...,
        distributor_address: builtins.str = ...,
        allocator_address: builtins.str = ...,
        linker_address: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim_type_deadline_date", b"claim_type_deadline_date", "clawback_date", b"clawback_date", "distribution_end_date", b"distribution_end_date", "distribution_start_date", b"distribution_start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["admin", b"admin", "airdrop_id", b"airdrop_id", "allocator_address", b"allocator_address", "claim_type_deadline_date", b"claim_type_deadline_date", "clawback_date", b"clawback_date", "distribution_end_date", b"distribution_end_date", "distribution_start_date", b"distribution_start_date", "distributor_address", b"distributor_address", "early_claim_penalty", b"early_claim_penalty", "linker_address", b"linker_address", "reward_denom", b"reward_denom"]) -> None: ...

global___MsgCreateAirdrop = MsgCreateAirdrop

@typing.final
class MsgCreateAirdropResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgCreateAirdropResponse = MsgCreateAirdropResponse

@typing.final
class MsgUpdateAirdrop(google.protobuf.message.Message):
    """UpdateAirdrop"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADMIN_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    REWARD_DENOM_FIELD_NUMBER: builtins.int
    DISTRIBUTION_START_DATE_FIELD_NUMBER: builtins.int
    DISTRIBUTION_END_DATE_FIELD_NUMBER: builtins.int
    CLAWBACK_DATE_FIELD_NUMBER: builtins.int
    CLAIM_TYPE_DEADLINE_DATE_FIELD_NUMBER: builtins.int
    EARLY_CLAIM_PENALTY_FIELD_NUMBER: builtins.int
    DISTRIBUTOR_ADDRESS_FIELD_NUMBER: builtins.int
    ALLOCATOR_ADDRESS_FIELD_NUMBER: builtins.int
    LINKER_ADDRESS_FIELD_NUMBER: builtins.int
    admin: builtins.str
    """Airdrop admin address"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    reward_denom: builtins.str
    """Denom used when distributing rewards"""
    early_claim_penalty: builtins.str
    """Penalty for claiming rewards early - e.g. 0.5 means claiming early will
    result in losing 50% of rewards
    """
    distributor_address: builtins.str
    """Account that holds the total reward balance and distributes to users"""
    allocator_address: builtins.str
    """Admin account with permissions to add or update allocations"""
    linker_address: builtins.str
    """Admin account with permissions to link addresseses"""
    @property
    def distribution_start_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The first date that claiming begins and rewards are distributed"""

    @property
    def distribution_end_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The last date for rewards to be distributed. Immediately after this date
        the rewards can no longer be claimed, but rewards have not been clawed back
        yet
        """

    @property
    def clawback_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Date with which the rewards are clawed back (occurs after the distribution
        end date)
        """

    @property
    def claim_type_deadline_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Deadline for the user to make a decision on their claim type"""

    def __init__(
        self,
        *,
        admin: builtins.str = ...,
        airdrop_id: builtins.str = ...,
        reward_denom: builtins.str = ...,
        distribution_start_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        distribution_end_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        clawback_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        claim_type_deadline_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        early_claim_penalty: builtins.str = ...,
        distributor_address: builtins.str = ...,
        allocator_address: builtins.str = ...,
        linker_address: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["claim_type_deadline_date", b"claim_type_deadline_date", "clawback_date", b"clawback_date", "distribution_end_date", b"distribution_end_date", "distribution_start_date", b"distribution_start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["admin", b"admin", "airdrop_id", b"airdrop_id", "allocator_address", b"allocator_address", "claim_type_deadline_date", b"claim_type_deadline_date", "clawback_date", b"clawback_date", "distribution_end_date", b"distribution_end_date", "distribution_start_date", b"distribution_start_date", "distributor_address", b"distributor_address", "early_claim_penalty", b"early_claim_penalty", "linker_address", b"linker_address", "reward_denom", b"reward_denom"]) -> None: ...

global___MsgUpdateAirdrop = MsgUpdateAirdrop

@typing.final
class MsgUpdateAirdropResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgUpdateAirdropResponse = MsgUpdateAirdropResponse

@typing.final
class RawAllocation(google.protobuf.message.Message):
    """Allocation specification when bootstrapping reward data"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ADDRESS_FIELD_NUMBER: builtins.int
    ALLOCATIONS_FIELD_NUMBER: builtins.int
    user_address: builtins.str
    @property
    def allocations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        user_address: builtins.str = ...,
        allocations: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["allocations", b"allocations", "user_address", b"user_address"]) -> None: ...

global___RawAllocation = RawAllocation

@typing.final
class MsgAddAllocations(google.protobuf.message.Message):
    """AddAllocations"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADMIN_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    ALLOCATIONS_FIELD_NUMBER: builtins.int
    admin: builtins.str
    """Airdrop admin address"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    @property
    def allocations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RawAllocation]:
        """List of address/allocation pairs for each user"""

    def __init__(
        self,
        *,
        admin: builtins.str = ...,
        airdrop_id: builtins.str = ...,
        allocations: collections.abc.Iterable[global___RawAllocation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["admin", b"admin", "airdrop_id", b"airdrop_id", "allocations", b"allocations"]) -> None: ...

global___MsgAddAllocations = MsgAddAllocations

@typing.final
class MsgAddAllocationsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgAddAllocationsResponse = MsgAddAllocationsResponse

@typing.final
class MsgUpdateUserAllocation(google.protobuf.message.Message):
    """UpdateUserAllocation"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADMIN_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    USER_ADDRESS_FIELD_NUMBER: builtins.int
    ALLOCATIONS_FIELD_NUMBER: builtins.int
    admin: builtins.str
    """Airdrop admin address"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    user_address: builtins.str
    """Address of the airdrop recipient"""
    @property
    def allocations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Allocations - as an array where each element represents the rewards for a
        day
        """

    def __init__(
        self,
        *,
        admin: builtins.str = ...,
        airdrop_id: builtins.str = ...,
        user_address: builtins.str = ...,
        allocations: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["admin", b"admin", "airdrop_id", b"airdrop_id", "allocations", b"allocations", "user_address", b"user_address"]) -> None: ...

global___MsgUpdateUserAllocation = MsgUpdateUserAllocation

@typing.final
class MsgUpdateUserAllocationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgUpdateUserAllocationResponse = MsgUpdateUserAllocationResponse

@typing.final
class MsgLinkAddresses(google.protobuf.message.Message):
    """LinkAddresses"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADMIN_FIELD_NUMBER: builtins.int
    AIRDROP_ID_FIELD_NUMBER: builtins.int
    STRIDE_ADDRESS_FIELD_NUMBER: builtins.int
    HOST_ADDRESS_FIELD_NUMBER: builtins.int
    admin: builtins.str
    """Airdrop admin address"""
    airdrop_id: builtins.str
    """Airdrop ID"""
    stride_address: builtins.str
    """Stride address - this address may or may not exist in allocations yet"""
    host_address: builtins.str
    """Host address - this address must exist"""
    def __init__(
        self,
        *,
        admin: builtins.str = ...,
        airdrop_id: builtins.str = ...,
        stride_address: builtins.str = ...,
        host_address: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["admin", b"admin", "airdrop_id", b"airdrop_id", "host_address", b"host_address", "stride_address", b"stride_address"]) -> None: ...

global___MsgLinkAddresses = MsgLinkAddresses

@typing.final
class MsgLinkAddressesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___MsgLinkAddressesResponse = MsgLinkAddressesResponse
