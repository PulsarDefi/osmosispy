"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Action:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ACTION_FREE: _Action.ValueType  # 0
    ACTION_LIQUID_STAKE: _Action.ValueType  # 1
    ACTION_DELEGATE_STAKE: _Action.ValueType  # 2

class Action(_Action, metaclass=_ActionEnumTypeWrapper): ...

ACTION_FREE: Action.ValueType  # 0
ACTION_LIQUID_STAKE: Action.ValueType  # 1
ACTION_DELEGATE_STAKE: Action.ValueType  # 2
global___Action = Action

@typing.final
class ClaimRecord(google.protobuf.message.Message):
    """A Claim Records is the metadata of claim data per address"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AIRDROP_IDENTIFIER_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    ACTION_COMPLETED_FIELD_NUMBER: builtins.int
    airdrop_identifier: builtins.str
    """airdrop identifier"""
    address: builtins.str
    """address of claim user"""
    weight: builtins.str
    """weight that represent the portion from total allocation"""
    @property
    def action_completed(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]:
        """true if action is completed
        index of bool in array refers to action enum #
        """

    def __init__(
        self,
        *,
        airdrop_identifier: builtins.str = ...,
        address: builtins.str = ...,
        weight: builtins.str = ...,
        action_completed: collections.abc.Iterable[builtins.bool] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["action_completed", b"action_completed", "address", b"address", "airdrop_identifier", b"airdrop_identifier", "weight", b"weight"]) -> None: ...

global___ClaimRecord = ClaimRecord
