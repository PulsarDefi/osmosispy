"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import cosmos.auth.v1beta1.auth_pb2
import cosmos.base.v1beta1.coin_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class BaseVestingAccount(google.protobuf.message.Message):
    """BaseVestingAccount implements the VestingAccount interface. It contains all
    the necessary fields needed for any vesting account implementation.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASE_ACCOUNT_FIELD_NUMBER: builtins.int
    ORIGINAL_VESTING_FIELD_NUMBER: builtins.int
    DELEGATED_FREE_FIELD_NUMBER: builtins.int
    DELEGATED_VESTING_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    end_time: builtins.int
    @property
    def base_account(self) -> cosmos.auth.v1beta1.auth_pb2.BaseAccount: ...
    @property
    def original_vesting(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cosmos.base.v1beta1.coin_pb2.Coin]: ...
    @property
    def delegated_free(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cosmos.base.v1beta1.coin_pb2.Coin]: ...
    @property
    def delegated_vesting(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cosmos.base.v1beta1.coin_pb2.Coin]: ...
    def __init__(
        self,
        *,
        base_account: cosmos.auth.v1beta1.auth_pb2.BaseAccount | None = ...,
        original_vesting: collections.abc.Iterable[cosmos.base.v1beta1.coin_pb2.Coin] | None = ...,
        delegated_free: collections.abc.Iterable[cosmos.base.v1beta1.coin_pb2.Coin] | None = ...,
        delegated_vesting: collections.abc.Iterable[cosmos.base.v1beta1.coin_pb2.Coin] | None = ...,
        end_time: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["base_account", b"base_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["base_account", b"base_account", "delegated_free", b"delegated_free", "delegated_vesting", b"delegated_vesting", "end_time", b"end_time", "original_vesting", b"original_vesting"]) -> None: ...

global___BaseVestingAccount = BaseVestingAccount

@typing.final
class Period(google.protobuf.message.Message):
    """Period defines a length of time and amount of coins that will vest."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_TIME_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    ACTION_TYPE_FIELD_NUMBER: builtins.int
    start_time: builtins.int
    length: builtins.int
    action_type: builtins.int
    @property
    def amount(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[cosmos.base.v1beta1.coin_pb2.Coin]: ...
    def __init__(
        self,
        *,
        start_time: builtins.int = ...,
        length: builtins.int = ...,
        amount: collections.abc.Iterable[cosmos.base.v1beta1.coin_pb2.Coin] | None = ...,
        action_type: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["action_type", b"action_type", "amount", b"amount", "length", b"length", "start_time", b"start_time"]) -> None: ...

global___Period = Period

@typing.final
class StridePeriodicVestingAccount(google.protobuf.message.Message):
    """StridePeriodicVestingAccount implements the VestingAccount interface. It
    periodically vests by unlocking coins during each specified period.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASE_VESTING_ACCOUNT_FIELD_NUMBER: builtins.int
    VESTING_PERIODS_FIELD_NUMBER: builtins.int
    @property
    def base_vesting_account(self) -> global___BaseVestingAccount: ...
    @property
    def vesting_periods(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Period]: ...
    def __init__(
        self,
        *,
        base_vesting_account: global___BaseVestingAccount | None = ...,
        vesting_periods: collections.abc.Iterable[global___Period] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["base_vesting_account", b"base_vesting_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["base_vesting_account", b"base_vesting_account", "vesting_periods", b"vesting_periods"]) -> None: ...

global___StridePeriodicVestingAccount = StridePeriodicVestingAccount
