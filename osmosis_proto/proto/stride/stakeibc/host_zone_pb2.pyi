"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import stride.stakeibc.validator_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class CommunityPoolRebate(google.protobuf.message.Message):
    """CommunityPoolRebate stores the size of the community pool liquid stake
    (denominated in stTokens) and the rebate rate as a decimal
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REBATE_RATE_FIELD_NUMBER: builtins.int
    LIQUID_STAKED_ST_TOKEN_AMOUNT_FIELD_NUMBER: builtins.int
    rebate_rate: builtins.str
    """Rebate percentage as a decimal (e.g. 0.2 for 20%)"""
    liquid_staked_st_token_amount: builtins.str
    """Number of stTokens received from the community pool liquid stake"""
    def __init__(
        self,
        *,
        rebate_rate: builtins.str = ...,
        liquid_staked_st_token_amount: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["liquid_staked_st_token_amount", b"liquid_staked_st_token_amount", "rebate_rate", b"rebate_rate"]) -> None: ...

global___CommunityPoolRebate = CommunityPoolRebate

@typing.final
class HostZone(google.protobuf.message.Message):
    """Core data structure to track liquid staking zones"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHAIN_ID_FIELD_NUMBER: builtins.int
    BECH32PREFIX_FIELD_NUMBER: builtins.int
    CONNECTION_ID_FIELD_NUMBER: builtins.int
    TRANSFER_CHANNEL_ID_FIELD_NUMBER: builtins.int
    IBC_DENOM_FIELD_NUMBER: builtins.int
    HOST_DENOM_FIELD_NUMBER: builtins.int
    UNBONDING_PERIOD_FIELD_NUMBER: builtins.int
    VALIDATORS_FIELD_NUMBER: builtins.int
    DEPOSIT_ADDRESS_FIELD_NUMBER: builtins.int
    WITHDRAWAL_ICA_ADDRESS_FIELD_NUMBER: builtins.int
    FEE_ICA_ADDRESS_FIELD_NUMBER: builtins.int
    DELEGATION_ICA_ADDRESS_FIELD_NUMBER: builtins.int
    REDEMPTION_ICA_ADDRESS_FIELD_NUMBER: builtins.int
    COMMUNITY_POOL_DEPOSIT_ICA_ADDRESS_FIELD_NUMBER: builtins.int
    COMMUNITY_POOL_RETURN_ICA_ADDRESS_FIELD_NUMBER: builtins.int
    COMMUNITY_POOL_STAKE_HOLDING_ADDRESS_FIELD_NUMBER: builtins.int
    COMMUNITY_POOL_REDEEM_HOLDING_ADDRESS_FIELD_NUMBER: builtins.int
    COMMUNITY_POOL_TREASURY_ADDRESS_FIELD_NUMBER: builtins.int
    TOTAL_DELEGATIONS_FIELD_NUMBER: builtins.int
    LAST_REDEMPTION_RATE_FIELD_NUMBER: builtins.int
    REDEMPTION_RATE_FIELD_NUMBER: builtins.int
    MIN_REDEMPTION_RATE_FIELD_NUMBER: builtins.int
    MAX_REDEMPTION_RATE_FIELD_NUMBER: builtins.int
    MIN_INNER_REDEMPTION_RATE_FIELD_NUMBER: builtins.int
    MAX_INNER_REDEMPTION_RATE_FIELD_NUMBER: builtins.int
    MAX_MESSAGES_PER_ICA_TX_FIELD_NUMBER: builtins.int
    REDEMPTIONS_ENABLED_FIELD_NUMBER: builtins.int
    COMMUNITY_POOL_REBATE_FIELD_NUMBER: builtins.int
    LSM_LIQUID_STAKE_ENABLED_FIELD_NUMBER: builtins.int
    HALTED_FIELD_NUMBER: builtins.int
    chain_id: builtins.str
    """Chain ID of the host zone"""
    bech32prefix: builtins.str
    """Bech32 prefix of host zone's address"""
    connection_id: builtins.str
    """ConnectionID from Stride to the host zone (ID is on the stride side)"""
    transfer_channel_id: builtins.str
    """Transfer Channel ID from Stride to the host zone (ID is on the stride side)"""
    ibc_denom: builtins.str
    """ibc denom of the host zone's native token on stride"""
    host_denom: builtins.str
    """native denom on host zone"""
    unbonding_period: builtins.int
    """The unbonding period in days (e.g. 21)"""
    deposit_address: builtins.str
    """Address that custodies native tokens during a liquid stake"""
    withdrawal_ica_address: builtins.str
    """ICA Address on the host zone responsible for collecting rewards"""
    fee_ica_address: builtins.str
    """ICA Address on the host zone responsible for commission"""
    delegation_ica_address: builtins.str
    """ICA Address on the host zone responsible for staking and unstaking"""
    redemption_ica_address: builtins.str
    """ICA Address that receives unstaked tokens after they've finished unbonding"""
    community_pool_deposit_ica_address: builtins.str
    """ICA Address that receives tokens from a community pool to liquid stake or
    redeem In the case of a liquid stake, the community pool deposits native
    tokens In the case of a redemption, the community pool deposits stTokens
    """
    community_pool_return_ica_address: builtins.str
    """ICA Address that distributes tokens back to the community pool during a
    community pool liquid stake or redeem In the case of a liquid stake, the
    return address sends back stTokens In the case of a redemption, the return
    address sends back native tokens
    """
    community_pool_stake_holding_address: builtins.str
    """Module account on Stride that receives native tokens from the deposit ICA
    and liquid stakes them
    """
    community_pool_redeem_holding_address: builtins.str
    """Module account on Stride that receives stTokens from the deposit ICA and
    redeems them
    """
    community_pool_treasury_address: builtins.str
    """Optional community pool address to send tokens to after a community pool
    liquid stake or redemption If this address is empty, the tokens are sent to
    the main community pool
    """
    total_delegations: builtins.str
    """The total delegated balance on the host zone"""
    last_redemption_rate: builtins.str
    """The redemption rate from the previous epoch"""
    redemption_rate: builtins.str
    """The current redemption rate"""
    min_redemption_rate: builtins.str
    """The min outer redemption rate bound - controlled only be governance
    The min inner bound cannot exceed this bound
    """
    max_redemption_rate: builtins.str
    """The max outer redemption rate bound - controlled only be governance
    The max inner bound cannot exceed this bound
    """
    min_inner_redemption_rate: builtins.str
    """The min minner redemption rate bound - controlled by the admin
    If the redemption rate exceeds this bound, the host zone is halted
    """
    max_inner_redemption_rate: builtins.str
    """The max minner redemption rate bound - controlled by the admin
    If the redemption rate exceeds this bound, the host zone is halted
    """
    max_messages_per_ica_tx: builtins.int
    """The max number of messages that can be sent in a delegation
    or undelegation ICA tx
    """
    redemptions_enabled: builtins.bool
    """Indicates whether redemptions are allowed through this module"""
    lsm_liquid_stake_enabled: builtins.bool
    """A boolean indicating whether the chain has LSM enabled"""
    halted: builtins.bool
    """A boolean indicating whether the chain is currently halted"""
    @property
    def validators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[stride.stakeibc.validator_pb2.Validator]:
        """List of validators that are delegated to"""

    @property
    def community_pool_rebate(self) -> global___CommunityPoolRebate:
        """An optional fee rebate
        If there is no rebate for the host zone, this will be nil
        """

    def __init__(
        self,
        *,
        chain_id: builtins.str = ...,
        bech32prefix: builtins.str = ...,
        connection_id: builtins.str = ...,
        transfer_channel_id: builtins.str = ...,
        ibc_denom: builtins.str = ...,
        host_denom: builtins.str = ...,
        unbonding_period: builtins.int = ...,
        validators: collections.abc.Iterable[stride.stakeibc.validator_pb2.Validator] | None = ...,
        deposit_address: builtins.str = ...,
        withdrawal_ica_address: builtins.str = ...,
        fee_ica_address: builtins.str = ...,
        delegation_ica_address: builtins.str = ...,
        redemption_ica_address: builtins.str = ...,
        community_pool_deposit_ica_address: builtins.str = ...,
        community_pool_return_ica_address: builtins.str = ...,
        community_pool_stake_holding_address: builtins.str = ...,
        community_pool_redeem_holding_address: builtins.str = ...,
        community_pool_treasury_address: builtins.str = ...,
        total_delegations: builtins.str = ...,
        last_redemption_rate: builtins.str = ...,
        redemption_rate: builtins.str = ...,
        min_redemption_rate: builtins.str = ...,
        max_redemption_rate: builtins.str = ...,
        min_inner_redemption_rate: builtins.str = ...,
        max_inner_redemption_rate: builtins.str = ...,
        max_messages_per_ica_tx: builtins.int = ...,
        redemptions_enabled: builtins.bool = ...,
        community_pool_rebate: global___CommunityPoolRebate | None = ...,
        lsm_liquid_stake_enabled: builtins.bool = ...,
        halted: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["community_pool_rebate", b"community_pool_rebate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["bech32prefix", b"bech32prefix", "chain_id", b"chain_id", "community_pool_deposit_ica_address", b"community_pool_deposit_ica_address", "community_pool_rebate", b"community_pool_rebate", "community_pool_redeem_holding_address", b"community_pool_redeem_holding_address", "community_pool_return_ica_address", b"community_pool_return_ica_address", "community_pool_stake_holding_address", b"community_pool_stake_holding_address", "community_pool_treasury_address", b"community_pool_treasury_address", "connection_id", b"connection_id", "delegation_ica_address", b"delegation_ica_address", "deposit_address", b"deposit_address", "fee_ica_address", b"fee_ica_address", "halted", b"halted", "host_denom", b"host_denom", "ibc_denom", b"ibc_denom", "last_redemption_rate", b"last_redemption_rate", "lsm_liquid_stake_enabled", b"lsm_liquid_stake_enabled", "max_inner_redemption_rate", b"max_inner_redemption_rate", "max_messages_per_ica_tx", b"max_messages_per_ica_tx", "max_redemption_rate", b"max_redemption_rate", "min_inner_redemption_rate", b"min_inner_redemption_rate", "min_redemption_rate", b"min_redemption_rate", "redemption_ica_address", b"redemption_ica_address", "redemption_rate", b"redemption_rate", "redemptions_enabled", b"redemptions_enabled", "total_delegations", b"total_delegations", "transfer_channel_id", b"transfer_channel_id", "unbonding_period", b"unbonding_period", "validators", b"validators", "withdrawal_ica_address", b"withdrawal_ica_address"]) -> None: ...

global___HostZone = HostZone
