# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: stride/stakeibc/address_unbonding.proto
# Protobuf Python Version: 5.27.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b"\n'stride/stakeibc/address_unbonding.proto\x12\x0fstride.stakeibc\x1a\x14gogoproto/gogo.proto\"\xd6\x01\n\x10\x41\x64\x64ressUnbonding\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x10\n\x08receiver\x18\x02 \x01(\t\x12 \n\x18unbonding_estimated_time\x18\x03 \x01(\t\x12>\n\x06\x61mount\x18\x04 \x01(\tB.\xc8\xde\x1f\x00\xda\xde\x1f&github.com/cosmos/cosmos-sdk/types.Int\x12\r\n\x05\x64\x65nom\x18\x05 \x01(\t\x12\x18\n\x10\x63laim_is_pending\x18\x08 \x01(\x08\x12\x14\n\x0c\x65poch_number\x18\t \x01(\x04\x42\x34Z2github.com/Stride-Labs/stride/v24/x/stakeibc/typesb\x06proto3"
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "stride.stakeibc.address_unbonding_pb2", _globals
)
if not _descriptor._USE_C_DESCRIPTORS:
    _globals["DESCRIPTOR"]._loaded_options = None
    _globals["DESCRIPTOR"]._serialized_options = (
        b"Z2github.com/Stride-Labs/stride/v24/x/stakeibc/types"
    )
    _globals["_ADDRESSUNBONDING"].fields_by_name["amount"]._loaded_options = None
    _globals["_ADDRESSUNBONDING"].fields_by_name[
        "amount"
    ]._serialized_options = (
        b"\310\336\037\000\332\336\037&github.com/cosmos/cosmos-sdk/types.Int"
    )
    _globals["_ADDRESSUNBONDING"]._serialized_start = 83
    _globals["_ADDRESSUNBONDING"]._serialized_end = 297
# @@protoc_insertion_point(module_scope)
