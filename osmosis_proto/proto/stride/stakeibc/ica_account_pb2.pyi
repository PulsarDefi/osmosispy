"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ICAAccountType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ICAAccountTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ICAAccountType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    DELEGATION: _ICAAccountType.ValueType  # 0
    FEE: _ICAAccountType.ValueType  # 1
    WITHDRAWAL: _ICAAccountType.ValueType  # 2
    REDEMPTION: _ICAAccountType.ValueType  # 3
    COMMUNITY_POOL_DEPOSIT: _ICAAccountType.ValueType  # 4
    COMMUNITY_POOL_RETURN: _ICAAccountType.ValueType  # 5
    CONVERTER_UNWIND: _ICAAccountType.ValueType  # 6
    CONVERTER_TRADE: _ICAAccountType.ValueType  # 7

class ICAAccountType(_ICAAccountType, metaclass=_ICAAccountTypeEnumTypeWrapper): ...

DELEGATION: ICAAccountType.ValueType  # 0
FEE: ICAAccountType.ValueType  # 1
WITHDRAWAL: ICAAccountType.ValueType  # 2
REDEMPTION: ICAAccountType.ValueType  # 3
COMMUNITY_POOL_DEPOSIT: ICAAccountType.ValueType  # 4
COMMUNITY_POOL_RETURN: ICAAccountType.ValueType  # 5
CONVERTER_UNWIND: ICAAccountType.ValueType  # 6
CONVERTER_TRADE: ICAAccountType.ValueType  # 7
global___ICAAccountType = ICAAccountType

@typing.final
class ICAAccount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CHAIN_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CONNECTION_ID_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    chain_id: builtins.str
    type: global___ICAAccountType.ValueType
    connection_id: builtins.str
    address: builtins.str
    def __init__(
        self,
        *,
        chain_id: builtins.str = ...,
        type: global___ICAAccountType.ValueType = ...,
        connection_id: builtins.str = ...,
        address: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "chain_id", b"chain_id", "connection_id", b"connection_id", "type", b"type"]) -> None: ...

global___ICAAccount = ICAAccount
